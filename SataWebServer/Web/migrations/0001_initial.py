# Generated by Django 2.1.2 on 2018-12-04 12:43

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='A4',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'a4',
            },
        ),
        migrations.CreateModel(
            name='AchievementChangeInfoTemp',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('change_ago_company_name', models.TextField(db_column='CHANGE_AGO_COMPANY_NAME')),
                ('change_later_company_name', models.TextField(db_column='CHANGE_LATER_COMPANY_NAME')),
                ('org_code', models.TextField(db_column='ORG_CODE')),
                ('document_no', models.TextField(db_column='DOCUMENT_NO')),
                ('project_name', models.TextField(db_column='PROJECT_NAME')),
            ],
            options={
                'managed': False,
                'db_table': 'achievement_change_info_temp',
            },
        ),
        migrations.CreateModel(
            name='AchievementPatentInfoTemp',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('project_name', models.TextField(db_column='PROJECT_NAME')),
                ('document_no', models.TextField(db_column='DOCUMENT_NO')),
                ('company_name', models.TextField(db_column='COMPANY_NAME')),
                ('org_code', models.TextField(db_column='ORG_CODE')),
            ],
            options={
                'managed': False,
                'db_table': 'achievement_patent_info_temp',
            },
        ),
        migrations.CreateModel(
            name='AchievementProjectInfoTemp',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('document_no', models.TextField(db_column='DOCUMENT_NO')),
                ('project_name', models.TextField(db_column='PROJECT_NAME')),
                ('year', models.TextField(db_column='YEAR')),
                ('company_name', models.TextField(db_column='COMPANY_NAME')),
                ('org_code', models.TextField(db_column='ORG_CODE')),
            ],
            options={
                'managed': False,
                'db_table': 'achievement_project_info_temp',
            },
        ),
        migrations.CreateModel(
            name='AnimalSelection',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('org_name', models.TextField(blank=True, db_column='ORG_NAME', null=True)),
                ('grant_license', models.TextField(blank=True, db_column='GRANT_LICENSE', null=True)),
                ('grant_org', models.TextField(blank=True, db_column='GRANT_ORG', null=True)),
                ('valid_from', models.TextField(blank=True, db_column='VALID_FROM', null=True)),
                ('valid_to', models.TextField(blank=True, db_column='VALID_TO', null=True)),
                ('license_status', models.TextField(blank=True, db_column='LICENSE_STATUS', null=True)),
                ('grant_date', models.TextField(blank=True, db_column='GRANT_DATE', null=True)),
                ('details', models.TextField(blank=True, db_column='DETAILS', null=True)),
                ('org_address', models.TextField(blank=True, db_column='ORG_ADDRESS', null=True)),
                ('f_name', models.TextField(blank=True, db_column='F_NAME', null=True)),
                ('f_contact', models.TextField(blank=True, db_column='F_CONTACT', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('l_name', models.TextField(blank=True, db_column='L_NAME', null=True)),
                ('l_contact', models.TextField(blank=True, db_column='L_CONTACT', null=True)),
                ('real_address', models.TextField(blank=True, db_column='REAL_ADDRESS', null=True)),
                ('selection_type', models.TextField(blank=True, db_column='SELECTION_TYPE', null=True)),
                ('selection_date', models.TextField(blank=True, db_column='SELECTION_DATE', null=True)),
                ('selection_content', models.TextField(blank=True, db_column='SELECTION_CONTENT', null=True)),
                ('selection_issue', models.TextField(blank=True, db_column='SELECTION_ISSUE', null=True)),
                ('selection_result', models.TextField(blank=True, db_column='SELECTION_RESULT', null=True)),
                ('selection_criteria', models.TextField(blank=True, db_column='SELECTION_CRITERIA', null=True)),
                ('selection_dept', models.TextField(blank=True, db_column='SELECTION_DEPT', null=True)),
                ('selection_person', models.TextField(blank=True, db_column='SELECTION_PERSON', null=True)),
                ('is_select', models.TextField(blank=True, db_column='IS_SELECT', null=True)),
                ('is_chosen', models.TextField(blank=True, db_column='IS_CHOSEN', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'animal_selection',
            },
        ),
        migrations.CreateModel(
            name='AnimalSelectionResult',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('org_name', models.TextField(blank=True, db_column='ORG_NAME', null=True)),
                ('grant_license', models.TextField(blank=True, db_column='GRANT_LICENSE', null=True)),
                ('grant_org', models.TextField(blank=True, db_column='GRANT_ORG', null=True)),
                ('valid_from', models.TextField(blank=True, db_column='VALID_FROM', null=True)),
                ('valid_to', models.TextField(blank=True, db_column='VALID_TO', null=True)),
                ('license_status', models.TextField(blank=True, db_column='LICENSE_STATUS', null=True)),
                ('grant_date', models.TextField(blank=True, db_column='GRANT_DATE', null=True)),
                ('details', models.TextField(blank=True, db_column='DETAILS', null=True)),
                ('org_address', models.TextField(blank=True, db_column='ORG_ADDRESS', null=True)),
                ('f_name', models.TextField(blank=True, db_column='F_NAME', null=True)),
                ('f_contact', models.TextField(blank=True, db_column='F_CONTACT', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('l_name', models.TextField(blank=True, db_column='L_NAME', null=True)),
                ('l_contact', models.TextField(blank=True, db_column='L_CONTACT', null=True)),
                ('real_address', models.TextField(blank=True, db_column='REAL_ADDRESS', null=True)),
                ('selection_type', models.TextField(blank=True, db_column='SELECTION_TYPE', null=True)),
                ('selection_date', models.TextField(blank=True, db_column='SELECTION_DATE', null=True)),
                ('selection_content', models.TextField(blank=True, db_column='SELECTION_CONTENT', null=True)),
                ('selection_issue', models.TextField(blank=True, db_column='SELECTION_ISSUE', null=True)),
                ('selection_result', models.TextField(blank=True, db_column='SELECTION_RESULT', null=True)),
                ('selection_criteria', models.TextField(blank=True, db_column='SELECTION_CRITERIA', null=True)),
                ('selection_dept', models.TextField(blank=True, db_column='SELECTION_DEPT', null=True)),
                ('selection_person', models.TextField(blank=True, db_column='SELECTION_PERSON', null=True)),
                ('is_select', models.TextField(blank=True, db_column='IS_SELECT', null=True)),
                ('selection_reason', models.TextField(blank=True, db_column='SELECTION_REASON', null=True)),
                ('selection_category', models.TextField(blank=True, db_column='SELECTION_CATEGORY', null=True)),
                ('selection_project', models.TextField(blank=True, db_column='SELECTION_PROJECT', null=True)),
                ('deal_person', models.TextField(blank=True, db_column='DEAL_PERSON', null=True)),
                ('deal_org', models.TextField(blank=True, db_column='DEAL_ORG', null=True)),
                ('is_gaozhi', models.TextField(blank=True, db_column='IS_GAOZHI', null=True)),
                ('gaozhi_date', models.TextField(blank=True, db_column='GAOZHI_DATE', null=True)),
                ('gaozhi_method', models.TextField(blank=True, db_column='GAOZHI_METHOD', null=True)),
                ('selection_place', models.TextField(blank=True, db_column='SELECTION_PLACE', null=True)),
                ('selection_list', models.TextField(blank=True, db_column='SELECTION_LIST', null=True)),
                ('check_date', models.TextField(blank=True, db_column='CHECK_DATE', null=True)),
                ('check_person', models.TextField(blank=True, db_column='CHECK_PERSON', null=True)),
                ('check_opinion', models.TextField(blank=True, db_column='CHECK_OPINION', null=True)),
                ('check_method', models.TextField(blank=True, db_column='CHECK_METHOD', null=True)),
                ('shenhe_person', models.TextField(blank=True, db_column='SHENHE_PERSON', null=True)),
                ('shenhe_date', models.TextField(blank=True, db_column='SHENHE_DATE', null=True)),
                ('shenhe_opinion', models.TextField(blank=True, db_column='SHENHE_OPINION', null=True)),
                ('jueding_person', models.TextField(blank=True, db_column='JUEDING_PERSON', null=True)),
                ('jueding_date', models.TextField(blank=True, db_column='JUEDING_DATE', null=True)),
                ('jueding_opinion', models.TextField(blank=True, db_column='JUEDING_OPINION', null=True)),
                ('selection_conclusion', models.TextField(blank=True, db_column='SELECTION_CONCLUSION', null=True)),
                ('fail_reason', models.TextField(blank=True, db_column='FAIL_REASON', null=True)),
                ('hege_chuli', models.TextField(blank=True, db_column='HEGE_CHULI', null=True)),
                ('buhege_leibie', models.TextField(blank=True, db_column='BUHEGE_LEIBIE', null=True)),
                ('buhege_neirong', models.TextField(blank=True, db_column='BUHEGE_NEIRONG', null=True)),
                ('buhege_chengxu', models.TextField(blank=True, db_column='BUHEGE_CHENGXU', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'animal_selection_result',
            },
        ),
        migrations.CreateModel(
            name='AnimalSelectionTemp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('org_name', models.TextField(blank=True, db_column='ORG_NAME', null=True)),
                ('grant_license', models.TextField(blank=True, db_column='GRANT_LICENSE', null=True)),
                ('grant_org', models.TextField(blank=True, db_column='GRANT_ORG', null=True)),
                ('valid_from', models.TextField(blank=True, db_column='VALID_FROM', null=True)),
                ('valid_to', models.TextField(blank=True, db_column='VALID_TO', null=True)),
                ('license_status', models.TextField(blank=True, db_column='LICENSE_STATUS', null=True)),
                ('grant_date', models.TextField(blank=True, db_column='GRANT_DATE', null=True)),
                ('details', models.TextField(blank=True, db_column='DETAILS', null=True)),
                ('org_address', models.TextField(blank=True, db_column='ORG_ADDRESS', null=True)),
                ('f_name', models.TextField(blank=True, db_column='F_NAME', null=True)),
                ('f_contact', models.TextField(blank=True, db_column='F_CONTACT', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('l_name', models.TextField(blank=True, db_column='L_NAME', null=True)),
                ('l_contact', models.TextField(blank=True, db_column='L_CONTACT', null=True)),
                ('real_address', models.TextField(blank=True, db_column='REAL_ADDRESS', null=True)),
                ('selection_type', models.TextField(blank=True, db_column='SELECTION_TYPE', null=True)),
                ('selection_date', models.TextField(blank=True, db_column='SELECTION_DATE', null=True)),
                ('selection_content', models.TextField(blank=True, db_column='SELECTION_CONTENT', null=True)),
                ('selection_issue', models.TextField(blank=True, db_column='SELECTION_ISSUE', null=True)),
                ('selection_result', models.TextField(blank=True, db_column='SELECTION_RESULT', null=True)),
                ('selection_criteria', models.TextField(blank=True, db_column='SELECTION_CRITERIA', null=True)),
                ('selection_dept', models.TextField(blank=True, db_column='SELECTION_DEPT', null=True)),
                ('is_select', models.TextField(blank=True, db_column='IS_SELECT', null=True)),
                ('is_chosen', models.TextField(blank=True, db_column='IS_CHOSEN', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'animal_selection_temp',
            },
        ),
        migrations.CreateModel(
            name='ApplyAcceptView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applyno', models.TextField(blank=True, db_column='APPLYNO', null=True)),
                ('result', models.TextField(blank=True, db_column='RESULT', null=True)),
                ('suggestion', models.TextField(blank=True, db_column='SUGGESTION', null=True)),
                ('opdepartcode', models.TextField(blank=True, db_column='OPDEPARTCODE', null=True)),
                ('opdepartname', models.TextField(blank=True, db_column='OPDEPARTNAME', null=True)),
                ('opuserid', models.TextField(blank=True, db_column='OPUSERID', null=True)),
                ('opusername', models.TextField(blank=True, db_column='OPUSERNAME', null=True)),
                ('optime', models.TextField(blank=True, db_column='OPTIME', null=True)),
                ('latestupdatetime', models.TextField(blank=True, db_column='LATESTUPDATETIME', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'apply_accept_view',
            },
        ),
        migrations.CreateModel(
            name='ApplyCollectView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applyno', models.TextField(db_column='APPLYNO', unique=True)),
                ('suggestion', models.TextField(blank=True, db_column='SUGGESTION', null=True)),
                ('opdepartcode', models.TextField(blank=True, db_column='OPDEPARTCODE', null=True)),
                ('opdepartname', models.TextField(blank=True, db_column='OPDEPARTNAME', null=True)),
                ('opuserid', models.TextField(blank=True, db_column='OPUSERID', null=True)),
                ('opusername', models.TextField(blank=True, db_column='OPUSERNAME', null=True)),
                ('optime', models.TextField(blank=True, db_column='OPTIME', null=True)),
                ('latestupdatetime', models.TextField(blank=True, db_column='LATESTUPDATETIME', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'apply_collect_view',
            },
        ),
        migrations.CreateModel(
            name='ApplyCorrectView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applyno', models.TextField(db_column='APPLYNO', unique=True)),
                ('suggestion', models.TextField(blank=True, db_column='SUGGESTION', null=True)),
                ('opdepartcode', models.TextField(blank=True, db_column='OPDEPARTCODE', null=True)),
                ('opdepartname', models.TextField(blank=True, db_column='OPDEPARTNAME', null=True)),
                ('opuserid', models.TextField(blank=True, db_column='OPUSERID', null=True)),
                ('opusername', models.TextField(blank=True, db_column='OPUSERNAME', null=True)),
                ('optime', models.TextField(blank=True, db_column='OPTIME', null=True)),
                ('stuffid', models.TextField(blank=True, db_column='STUFFID', null=True)),
                ('stuffsuggestion', models.TextField(blank=True, db_column='STUFFSUGGESTION', null=True)),
                ('latestupdatetime', models.TextField(blank=True, db_column='LATESTUPDATETIME', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'apply_correct_view',
            },
        ),
        migrations.CreateModel(
            name='ApplyPassView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applyno', models.TextField(db_column='APPLYNO', unique=True)),
                ('suggestion', models.TextField(blank=True, db_column='SUGGESTION', null=True)),
                ('opdepartcode', models.TextField(blank=True, db_column='OPDEPARTCODE', null=True)),
                ('opdepartname', models.TextField(blank=True, db_column='OPDEPARTNAME', null=True)),
                ('opuserid', models.TextField(blank=True, db_column='OPUSERID', null=True)),
                ('opusername', models.TextField(blank=True, db_column='OPUSERNAME', null=True)),
                ('optime', models.TextField(blank=True, db_column='OPTIME', null=True)),
                ('latestupdatetime', models.TextField(blank=True, db_column='LATESTUPDATETIME', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'apply_pass_view',
            },
        ),
        migrations.CreateModel(
            name='ApplySaveView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applyno', models.TextField(blank=True, db_column='APPLYNO', null=True)),
                ('itemcode', models.TextField(blank=True, db_column='ITEMCODE', null=True)),
                ('itemname', models.TextField(blank=True, db_column='ITEMNAME', null=True)),
                ('targettype', models.TextField(blank=True, db_column='TARGETTYPE', null=True)),
                ('targetname', models.TextField(blank=True, db_column='TARGETNAME', null=True)),
                ('targetno', models.TextField(blank=True, db_column='TARGETNO', null=True)),
                ('userid', models.TextField(blank=True, db_column='USERID', null=True)),
                ('username', models.TextField(blank=True, db_column='USERNAME', null=True)),
                ('licensetype', models.TextField(blank=True, db_column='LICENSETYPE', null=True)),
                ('licenseno', models.TextField(blank=True, db_column='LICENSENO', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
                ('content', models.TextField(blank=True, db_column='CONTENT', null=True)),
                ('optime', models.TextField(blank=True, db_column='OPTIME', null=True)),
                ('latestupdatetime', models.TextField(blank=True, db_column='LATESTUPDATETIME', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'apply_save_view',
            },
        ),
        migrations.CreateModel(
            name='ApplySubmitView',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applyno', models.TextField(db_column='APPLYNO', unique=True)),
                ('optime', models.TextField(blank=True, db_column='OPTIME', null=True)),
                ('latestupdatetime', models.TextField(blank=True, db_column='LATESTUPDATETIME', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'apply_submit_view',
            },
        ),
        migrations.CreateModel(
            name='Buyerinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('buyerno', models.TextField(unique=True)),
                ('buyername', models.TextField(blank=True, null=True)),
                ('buyertype', models.TextField(blank=True, null=True)),
                ('buyertype_view', models.TextField(blank=True, null=True)),
                ('buyersite', models.TextField(blank=True, null=True)),
                ('buyercountrygxqqy', models.TextField(blank=True, null=True)),
                ('buyercountrytype', models.TextField(blank=True, null=True)),
                ('buyercountrytype_view', models.TextField(blank=True, null=True)),
                ('buyerregisterdate', models.TextField(blank=True, null=True)),
                ('buyeruserloginname', models.TextField(blank=True, null=True)),
                ('buyerusername', models.TextField(blank=True, null=True)),
                ('buyersite_view', models.TextField(blank=True, null=True)),
                ('buyerzipcode', models.TextField(blank=True, null=True)),
                ('buyeraddress', models.TextField(blank=True, null=True)),
                ('buyerrepresentative', models.TextField(blank=True, null=True)),
                ('buyerretelephone', models.TextField(blank=True, null=True)),
                ('buyerreemail', models.TextField(blank=True, null=True)),
                ('buyercontact', models.TextField(blank=True, null=True)),
                ('buyercontacttel', models.TextField(blank=True, null=True)),
                ('buyercontactemail', models.TextField(blank=True, null=True)),
                ('buyerjsjdm', models.TextField(blank=True, null=True)),
                ('buyerswdjzh', models.TextField(blank=True, null=True)),
                ('buyerzzjgdmzh', models.TextField(blank=True, null=True)),
                ('buyersfzh', models.TextField(blank=True, null=True)),
                ('buyerhzzh', models.TextField(blank=True, null=True)),
                ('buyerparkname', models.TextField(blank=True, null=True)),
                ('buyergmjjhy', models.TextField(blank=True, null=True)),
                ('buyergmjjhy_view', models.TextField(blank=True, null=True)),
                ('buyerscale', models.TextField(blank=True, null=True)),
                ('buyerscale_view', models.TextField(blank=True, null=True)),
                ('buyerisyfjg', models.TextField(blank=True, null=True)),
                ('buyerkjfwjg', models.TextField(blank=True, null=True)),
                ('buyerkjfwjg_view', models.TextField(blank=True, null=True)),
                ('buyerkjfwjgmc', models.TextField(blank=True, null=True)),
                ('buyerjszyjg', models.TextField(blank=True, null=True)),
                ('buyerjszyjg_view', models.TextField(blank=True, null=True)),
                ('buyerjszyjgmc', models.TextField(blank=True, null=True)),
                ('buyerislist', models.TextField(blank=True, null=True)),
                ('buyersecuritycode', models.TextField(blank=True, null=True)),
                ('buyer_zzkyys', models.TextField(blank=True, null=True)),
                ('measureinfo', models.TextField(blank=True, null=True)),
                ('uploadflag', models.TextField(blank=True, null=True)),
                ('firsttime', models.TextField(blank=True, null=True)),
                ('latestinfo', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'buyerinfo',
            },
        ),
        migrations.CreateModel(
            name='Buyerinforcv',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('buyerno', models.TextField(blank=True, db_column='BuyerNo', null=True)),
                ('buyername', models.TextField(blank=True, db_column='BuyerName', null=True)),
                ('buyercountrytype', models.TextField(blank=True, db_column='BuyerCountryType', null=True)),
                ('buyercountrytype_view', models.TextField(blank=True, db_column='BuyerCountryType_View', null=True)),
                ('buyerregisterdate', models.TextField(blank=True, db_column='BuyerRegisterDate', null=True)),
                ('buyeruserloginname', models.TextField(blank=True, db_column='BuyerUserLoginName', null=True)),
                ('buyerusername', models.TextField(blank=True, db_column='BuyerUserName', null=True)),
                ('buyersite', models.TextField(blank=True, db_column='BuyerSite', null=True)),
                ('buyersite_view', models.TextField(blank=True, db_column='BuyerSite_View', null=True)),
                ('buyerzipcode', models.TextField(blank=True, db_column='BuyerZipCode', null=True)),
                ('buyeraddress', models.TextField(blank=True, db_column='BuyerAddress', null=True)),
                ('buyerrepresentative', models.TextField(blank=True, db_column='BuyerRepresentative', null=True)),
                ('buyerretelephone', models.TextField(blank=True, db_column='BuyerRetelephone', null=True)),
                ('buyercontact', models.TextField(blank=True, db_column='BuyerContact', null=True)),
                ('buyercontacttel', models.TextField(blank=True, db_column='BuyerContactTel', null=True)),
                ('buyercontactemail', models.TextField(blank=True, db_column='BuyerContactEmail', null=True)),
                ('buyertype', models.TextField(blank=True, db_column='BuyerType', null=True)),
                ('buyertype_view', models.TextField(blank=True, db_column='BuyerType_View', null=True)),
                ('buyerjsjdm', models.TextField(blank=True, db_column='BuyerJsjdm', null=True)),
                ('buyerswdjzh', models.TextField(blank=True, db_column='BuyerSwdjzh', null=True)),
                ('buyerzzjgdmzh', models.TextField(blank=True, db_column='BuyerZzjgdmzh', null=True)),
                ('buyersfzh', models.TextField(blank=True, db_column='BuyerSfzh', null=True)),
                ('buyerhzzh', models.TextField(blank=True, db_column='BuyerHzzh', null=True)),
                ('buyercountrygxqqy', models.TextField(blank=True, db_column='BuyerCountryGxqqy', null=True)),
                ('buyerparkname', models.TextField(blank=True, db_column='BuyerParkName', null=True)),
                ('buyergmjjhy', models.TextField(blank=True, db_column='BuyerGmjjhy', null=True)),
                ('buyergmjjhy_view', models.TextField(blank=True, db_column='BuyerGmjjhy_View', null=True)),
                ('buyerscale', models.TextField(blank=True, db_column='BuyerScale', null=True)),
                ('buyerscale_view', models.TextField(blank=True, db_column='BuyerScale_View', null=True)),
                ('buyerisyfjg', models.TextField(blank=True, db_column='BuyerIsyfjg', null=True)),
                ('buyerjszyjg', models.TextField(blank=True, db_column='BuyerJszyjg', null=True)),
                ('buyerjszyjg_view', models.TextField(blank=True, db_column='BuyerJszyjg_View', null=True)),
                ('buyerjszyjgmc', models.TextField(blank=True, db_column='BuyerJszyjgmc', null=True)),
                ('buyerislist', models.TextField(blank=True, db_column='BuyerIslist', null=True)),
                ('buyersecuritycode', models.TextField(blank=True, db_column='BuyerSecurityCode', null=True)),
                ('buyer_zzkyys', models.TextField(blank=True, db_column='Buyer_Zzkyys', null=True)),
                ('buyerkjfwjg', models.TextField(blank=True, db_column='BuyerKjfwjg', null=True)),
                ('buyerkjfwjg_view', models.TextField(blank=True, db_column='BuyerKjfwjg_view', null=True)),
                ('buyerkjfwjgmc', models.TextField(blank=True, db_column='BuyerKjfwjgmc', null=True)),
                ('measureinfo', models.TextField(blank=True, db_column='MeasureInfo', null=True)),
                ('downloadflag', models.TextField(blank=True, db_column='DownloadFlag', null=True)),
                ('firsttime', models.TextField(blank=True, db_column='FirstTime', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'buyerinforcv',
            },
        ),
        migrations.CreateModel(
            name='CompanyBaseInfoTemp',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('company_name', models.TextField(db_column='COMPANY_NAME')),
                ('org_code', models.TextField(db_column='ORG_CODE')),
            ],
            options={
                'managed': False,
                'db_table': 'company_base_info_temp',
            },
        ),
        migrations.CreateModel(
            name='Comparedtemp',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False, unique=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('number', models.TextField(blank=True, null=True)),
                ('senddate', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'comparedtemp',
            },
        ),
        migrations.CreateModel(
            name='Contractbuyer',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('contractid', models.TextField(blank=True, null=True)),
                ('sellerno', models.TextField(blank=True, null=True)),
                ('buyerno', models.TextField(blank=True, null=True)),
                ('measureinfo', models.TextField(blank=True, null=True)),
                ('firsttime', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'contractbuyer',
            },
        ),
        migrations.CreateModel(
            name='Contractbuyerrcv',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('contractid', models.TextField(db_column='CONTRACTID')),
                ('sellerno', models.TextField(db_column='SELLERNO')),
                ('buyerno', models.TextField(db_column='BUYERNO')),
                ('measureinfo', models.TextField(db_column='MeasureInfo')),
                ('downloadflag', models.TextField(db_column='DownloadFlag')),
                ('firsttime', models.TextField(blank=True, db_column='FirstTime', null=True)),
                ('transno', models.TextField(blank=True, db_column='TransNo', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'contractbuyerrcv',
            },
        ),
        migrations.CreateModel(
            name='Contractregisterinfo',
            fields=[
                ('id', models.TextField(primary_key=True, serialize=False, unique=True)),
                ('contractno', models.TextField(blank=True, null=True)),
                ('projectname', models.TextField(blank=True, db_column='ProjectName', null=True)),
                ('isseller', models.TextField(db_column='IsSeller')),
                ('conuserloginname', models.TextField(blank=True, null=True)),
                ('conusername', models.TextField(blank=True, null=True)),
                ('deptno', models.TextField(blank=True, db_column='DeptNo', null=True)),
                ('declaredate', models.TextField(blank=True, null=True)),
                ('conregisterdate', models.TextField(blank=True, null=True)),
                ('totalamount', models.TextField(blank=True, null=True)),
                ('technicalamount', models.TextField(blank=True, null=True)),
                ('signdate', models.TextField(blank=True, null=True)),
                ('contractbegindate', models.TextField(blank=True, null=True)),
                ('contractenddate', models.TextField(blank=True, null=True)),
                ('contracttype', models.TextField(blank=True, null=True)),
                ('contracttype_view', models.TextField(blank=True, null=True)),
                ('paymethod', models.TextField(blank=True, null=True)),
                ('paymethod_view', models.TextField(blank=True, null=True)),
                ('projectplantype', models.TextField(blank=True, null=True)),
                ('projectplantype_view', models.TextField(blank=True, null=True)),
                ('ipr', models.TextField(blank=True, null=True)),
                ('ipr_view', models.TextField(blank=True, null=True)),
                ('patentnum', models.TextField(blank=True, null=True)),
                ('in_patentnum', models.TextField(blank=True, null=True)),
                ('um_patentnum', models.TextField(blank=True, null=True)),
                ('ad_patentnum', models.TextField(blank=True, null=True)),
                ('techarea', models.TextField(blank=True, null=True)),
                ('techarea_view', models.TextField(blank=True, null=True)),
                ('economicobj', models.TextField(blank=True, null=True)),
                ('economicobj_view', models.TextField(blank=True, null=True)),
                ('serviceindus', models.TextField(blank=True, null=True)),
                ('serviceindus_view', models.TextField(blank=True, null=True)),
                ('topicname', models.TextField(blank=True, null=True)),
                ('topicno', models.TextField(blank=True, null=True)),
                ('authorizedno', models.TextField(blank=True, null=True)),
                ('isrelated', models.TextField(blank=True, null=True)),
                ('contractstatusid', models.TextField(blank=True, null=True)),
                ('receivedate', models.TextField(blank=True, null=True)),
                ('approvedate', models.TextField(blank=True, null=True)),
                ('measureinfo', models.TextField(blank=True, null=True)),
                ('uploadflag', models.TextField(blank=True, null=True)),
                ('firsttime', models.TextField(blank=True, null=True)),
                ('uploadinfo', models.TextField(blank=True, null=True)),
                ('serialnum', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'contractregisterinfo',
            },
        ),
        migrations.CreateModel(
            name='Contractregisterinforcv',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('projectname', models.TextField(blank=True, db_column='ProjectName', null=True)),
                ('isseller', models.TextField(blank=True, db_column='IsSeller', null=True)),
                ('deptno', models.TextField(blank=True, db_column='DeptNo', null=True)),
                ('declaredate', models.TextField(blank=True, db_column='DeclareDate', null=True)),
                ('conregisterdate', models.TextField(blank=True, db_column='ConRegisterDate', null=True)),
                ('conuserloginname', models.TextField(blank=True, db_column='ConUserLoginName', null=True)),
                ('conusername', models.TextField(blank=True, db_column='ConUserName', null=True)),
                ('totalamount', models.TextField(blank=True, db_column='TotalAmount', null=True)),
                ('technicalamount', models.TextField(blank=True, db_column='TechnicalAmount', null=True)),
                ('signdate', models.TextField(blank=True, db_column='SignDate', null=True)),
                ('contractbegindate', models.TextField(blank=True, db_column='ContractBeginDate', null=True)),
                ('contractenddate', models.TextField(blank=True, db_column='ContractEndDate', null=True)),
                ('paymethod', models.TextField(blank=True, db_column='PayMethod', null=True)),
                ('paymethod_view', models.TextField(blank=True, db_column='PayMethod_View', null=True)),
                ('contracttype', models.TextField(blank=True, db_column='ContractType', null=True)),
                ('contracttype_view', models.TextField(blank=True, db_column='ContractType_View', null=True)),
                ('ipr', models.TextField(blank=True, db_column='Ipr', null=True)),
                ('ipr_view', models.TextField(blank=True, db_column='Ipr_View', null=True)),
                ('patentnum', models.TextField(blank=True, db_column='PatentNum', null=True)),
                ('in_patentnum', models.TextField(blank=True, db_column='In_PatentNum', null=True)),
                ('um_patentnum', models.TextField(blank=True, db_column='Um_PatentNum', null=True)),
                ('ad_patentnum', models.TextField(blank=True, db_column='Ad_PatentNum', null=True)),
                ('techarea', models.TextField(blank=True, db_column='TechArea', null=True)),
                ('techarea_view', models.TextField(blank=True, db_column='TechArea_VIEW', null=True)),
                ('projectplantype', models.TextField(blank=True, db_column='ProjectPlanType', null=True)),
                ('projectplantype_view', models.TextField(blank=True, db_column='ProjectPlanType_View', null=True)),
                ('economicobj', models.TextField(blank=True, db_column='EconomicObj', null=True)),
                ('economicobj_view', models.TextField(blank=True, db_column='EconomicObj_View', null=True)),
                ('serviceindus', models.TextField(blank=True, db_column='ServiceIndus', null=True)),
                ('serviceindus_view', models.TextField(blank=True, db_column='ServiceIndus_View', null=True)),
                ('isrelated', models.TextField(blank=True, db_column='IsRelated', null=True)),
                ('topicname', models.TextField(blank=True, db_column='TopicName', null=True)),
                ('topicno', models.TextField(blank=True, db_column='TopicNo', null=True)),
                ('authorizedno', models.TextField(blank=True, db_column='AuthorizedNo', null=True)),
                ('contractstatusid', models.TextField(blank=True, db_column='ContractStatusId', null=True)),
                ('receivedate', models.TextField(blank=True, db_column='ReceiveDate', null=True)),
                ('approvedate', models.TextField(blank=True, db_column='ApproveDate', null=True)),
                ('measureinfo', models.TextField(blank=True, db_column='MeasureInfo', null=True)),
                ('downloadflag', models.TextField(blank=True, db_column='DownloadFlag', null=True)),
                ('firsttime', models.TextField(blank=True, db_column='FirstTime', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'contractregisterinforcv',
            },
        ),
        migrations.CreateModel(
            name='DataImportAchievementsChangeInfo',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('change_ago_company_name', models.TextField(db_column='CHANGE_AGO_COMPANY_NAME')),
                ('change_later_company_name', models.TextField(db_column='CHANGE_LATER_COMPANY_NAME')),
                ('org_code', models.TextField(db_column='ORG_CODE')),
                ('project_id', models.TextField(db_column='PROJECT_ID')),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_achievements_change_info',
            },
        ),
        migrations.CreateModel(
            name='DataImportAchievementsProjectInfo',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('project_id', models.TextField(db_column='PROJECT_ID')),
                ('project_number', models.TextField(db_column='PROJECT_NUMBER')),
                ('project_name', models.TextField(db_column='PROJECT_NAME')),
                ('company_id', models.TextField(db_column='COMPANY_ID')),
                ('have_imported', models.TextField(blank=True, db_column='HAVE_IMPORTED', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_achievements_project_info',
            },
        ),
        migrations.CreateModel(
            name='DataImportAchievementsPropertyInfo',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('project_id', models.TextField(db_column='PROJECT_ID')),
                ('intellectual_name', models.TextField(db_column='INTELLECTUAL_NAME')),
                ('intellectual_type', models.TextField(db_column='INTELLECTUAL_TYPE')),
                ('palent_number', models.TextField(db_column='PALENT_NUMBER')),
                ('is_investigation_stage', models.TextField(db_column='IS_INVESTIGATION_STAGE')),
                ('grant_date', models.TextField(blank=True, db_column='GRANT_DATE', null=True)),
                ('apply_date', models.TextField(blank=True, db_column='APPLY_DATE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_achievements_property_info',
            },
        ),
        migrations.CreateModel(
            name='DataImportBookmaking',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_bookmaking', models.TextField(db_column='ID_EXPERT_BOOKMAKING')),
                ('thesis_name', models.TextField(blank=True, db_column='THESIS_NAME', null=True)),
                ('thesis_domain', models.TextField(blank=True, db_column='THESIS_DOMAIN', null=True)),
                ('author_seq', models.TextField(blank=True, db_column='AUTHOR_SEQ', null=True)),
                ('publishhouse', models.TextField(blank=True, db_column='PUBLISHHOUSE', null=True)),
                ('vol_number', models.TextField(blank=True, db_column='VOL_NUMBER', null=True)),
                ('publicationlevel', models.TextField(blank=True, db_column='PUBLICATIONLEVEL', null=True)),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('ordernum', models.TextField(db_column='ORDERNUM')),
                ('influence', models.TextField(blank=True, db_column='INFLUENCE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_bookmaking',
            },
        ),
        migrations.CreateModel(
            name='DataImportCompanyInfo',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('company_id', models.TextField(db_column='COMPANY_ID')),
                ('company_name', models.TextField(db_column='COMPANY_NAME')),
                ('org_code', models.TextField(db_column='ORG_CODE')),
                ('have_imported', models.TextField(blank=True, db_column='HAVE_IMPORTED', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_company_info',
            },
        ),
        migrations.CreateModel(
            name='DataImportCompanyInfoBak',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('company_id', models.TextField(db_column='COMPANY_ID')),
                ('company_name', models.TextField(db_column='COMPANY_NAME')),
                ('org_code', models.TextField(db_column='ORG_CODE')),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_company_info_bak',
            },
        ),
        migrations.CreateModel(
            name='DataImportCompanyInfoChange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_company_name', models.TextField(blank=True, db_column='OLD_COMPANY_NAME', null=True)),
                ('new_company_name', models.TextField(blank=True, db_column='NEW_COMPANY_NAME', null=True)),
                ('org_code', models.TextField(blank=True, db_column='ORG_CODE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_company_info_change',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertAccount',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('account_id', models.TextField(db_column='ACCOUNT_ID')),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('createdate', models.TextField(blank=True, db_column='CREATEDATE', null=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
                ('pass_field', models.TextField(blank=True, db_column='PASS', null=True)),
                ('valid', models.TextField(blank=True, db_column='VALID', null=True)),
                ('removed', models.TextField(blank=True, db_column='REMOVED', null=True)),
                ('lastchg', models.TextField(blank=True, db_column='LASTCHG', null=True)),
                ('imin', models.TextField(blank=True, db_column='IMIN', null=True)),
                ('imax', models.TextField(blank=True, db_column='IMAX', null=True)),
                ('warn', models.TextField(blank=True, db_column='WARN', null=True)),
                ('inact', models.TextField(blank=True, db_column='INACT', null=True)),
                ('expire', models.TextField(blank=True, db_column='EXPIRE', null=True)),
                ('personnel', models.TextField(blank=True, db_column='PERSONNEL', null=True)),
                ('personeltype', models.TextField(blank=True, db_column='PERSONELTYPE', null=True)),
                ('startdate', models.TextField(blank=True, db_column='STARTDATE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_account',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertAchievement',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_achievement', models.TextField(db_column='ID_EXPERT_ACHIEVEMENT')),
                ('project_name', models.TextField(blank=True, db_column='PROJECT_NAME', null=True)),
                ('workdomain', models.TextField(blank=True, db_column='WORKDOMAIN', null=True)),
                ('effect', models.TextField(blank=True, db_column='EFFECT', null=True)),
                ('unit', models.TextField(blank=True, db_column='UNIT', null=True)),
                ('finish_time', models.TextField(blank=True, db_column='FINISH_TIME', null=True)),
                ('achievement_level', models.TextField(blank=True, db_column='ACHIEVEMENT_LEVEL', null=True)),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('ordernum', models.TextField(db_column='ORDERNUM')),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_achievement',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertAttendIndividualInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_attend_individual', models.TextField(db_column='ID_EXPERT_ATTEND_INDIVIDUAL')),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('individual_year', models.TextField(blank=True, db_column='INDIVIDUAL_YEAR', null=True)),
                ('attend_pro_num', models.TextField(blank=True, db_column='ATTEND_PRO_NUM', null=True)),
                ('individual_pro_num', models.TextField(blank=True, db_column='INDIVIDUAL_PRO_NUM', null=True)),
                ('createdate', models.TextField(blank=True, db_column='CREATEDATE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_attend_individual_info',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertAuditLog',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_audit_log', models.TextField(db_column='ID_EXPERT_AUDIT_LOG')),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('auditperson', models.TextField(blank=True, db_column='AUDITPERSON', null=True)),
                ('audittime', models.TextField(blank=True, db_column='AUDITTIME', null=True)),
                ('papermaterial', models.TextField(blank=True, db_column='PAPERMATERIAL', null=True)),
                ('remark', models.TextField(blank=True, db_column='REMARK', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_audit_log',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertBaseInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_base', models.TextField(db_column='ID_EXPERT_BASE')),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('photo', models.TextField(blank=True, db_column='PHOTO', null=True)),
                ('gender', models.TextField(blank=True, db_column='GENDER', null=True)),
                ('birth_date', models.TextField(blank=True, db_column='BIRTH_DATE', null=True)),
                ('id_number', models.TextField(blank=True, db_column='ID_NUMBER', null=True)),
                ('id_type', models.TextField(blank=True, db_column='ID_TYPE', null=True)),
                ('mobile_phone', models.TextField(blank=True, db_column='MOBILE_PHONE', null=True)),
                ('mailbox', models.TextField(blank=True, db_column='MAILBOX', null=True)),
                ('home_address', models.TextField(blank=True, db_column='HOME_ADDRESS', null=True)),
                ('home_zip', models.TextField(blank=True, db_column='HOME_ZIP', null=True)),
                ('home_phone', models.TextField(blank=True, db_column='HOME_PHONE', null=True)),
                ('culture_level', models.TextField(blank=True, db_column='CULTURE_LEVEL', null=True)),
                ('foreign_lang_type', models.TextField(blank=True, db_column='FOREIGN_LANG_TYPE', null=True)),
                ('foreign_lang_level', models.TextField(blank=True, db_column='FOREIGN_LANG_LEVEL', null=True)),
                ('foreign_lang_type2', models.TextField(blank=True, db_column='FOREIGN_LANG_TYPE2', null=True)),
                ('foreign_lang_level2', models.TextField(blank=True, db_column='FOREIGN_LANG_LEVEL2', null=True)),
                ('degree_level', models.TextField(blank=True, db_column='DEGREE_LEVEL', null=True)),
                ('degree_country', models.TextField(blank=True, db_column='DEGREE_COUNTRY', null=True)),
                ('unit_name', models.TextField(blank=True, db_column='UNIT_NAME', null=True)),
                ('unitzip', models.TextField(blank=True, db_column='UNITZIP', null=True)),
                ('unit_address', models.TextField(blank=True, db_column='UNIT_ADDRESS', null=True)),
                ('fax', models.TextField(blank=True, db_column='FAX', null=True)),
                ('department', models.TextField(blank=True, db_column='DEPARTMENT', null=True)),
                ('unit_phone1', models.TextField(blank=True, db_column='UNIT_PHONE1', null=True)),
                ('unit_phone2', models.TextField(blank=True, db_column='UNIT_PHONE2', null=True)),
                ('position', models.TextField(blank=True, db_column='POSITION', null=True)),
                ('title', models.TextField(blank=True, db_column='TITLE', null=True)),
                ('major', models.TextField(blank=True, db_column='MAJOR', null=True)),
                ('work_domain', models.TextField(blank=True, db_column='WORK_DOMAIN', null=True)),
                ('other_major', models.TextField(blank=True, db_column='OTHER_MAJOR', null=True)),
                ('expert_check_state', models.TextField(blank=True, db_column='EXPERT_CHECK_STATE', null=True)),
                ('memo', models.TextField(blank=True, db_column='MEMO', null=True)),
                ('mailbox2', models.TextField(blank=True, db_column='MAILBOX2', null=True)),
                ('mailbox3', models.TextField(blank=True, db_column='MAILBOX3', null=True)),
                ('otherunit1', models.TextField(blank=True, db_column='OTHERUNIT1', null=True)),
                ('otherunit2', models.TextField(blank=True, db_column='OTHERUNIT2', null=True)),
                ('otherunit3', models.TextField(blank=True, db_column='OTHERUNIT3', null=True)),
                ('otherdomain', models.TextField(blank=True, db_column='OTHERDOMAIN', null=True)),
                ('vocation', models.TextField(blank=True, db_column='VOCATION', null=True)),
                ('specialtytype', models.TextField(blank=True, db_column='SPECIALTYTYPE', null=True)),
                ('workingdomain', models.TextField(blank=True, db_column='WORKINGDOMAIN', null=True)),
                ('creditlevel', models.TextField(blank=True, db_column='CREDITLEVEL', null=True)),
                ('specialty', models.TextField(blank=True, db_column='SPECIALTY', null=True)),
                ('specialtydescription', models.TextField(blank=True, db_column='SPECIALTYDESCRIPTION', null=True)),
                ('distribution', models.TextField(blank=True, db_column='DISTRIBUTION', null=True)),
                ('importproject', models.TextField(blank=True, db_column='IMPORTPROJECT', null=True)),
                ('expertlastupdatetime', models.TextField(blank=True, db_column='EXPERTLASTUPDATETIME', null=True)),
                ('politytitle', models.TextField(blank=True, db_column='POLITYTITLE', null=True)),
                ('expertsubject', models.TextField(blank=True, db_column='EXPERTSUBJECT', null=True)),
                ('expertsubjectname', models.TextField(blank=True, db_column='EXPERTSUBJECTNAME', null=True)),
                ('workingdomainname', models.TextField(blank=True, db_column='WORKINGDOMAINNAME', null=True)),
                ('vocationname', models.TextField(blank=True, db_column='VOCATIONNAME', null=True)),
                ('zrjjcode', models.TextField(blank=True, db_column='ZRJJCODE', null=True)),
                ('zrjjcodename', models.TextField(blank=True, db_column='ZRJJCODENAME', null=True)),
                ('isinsh', models.TextField(blank=True, db_column='ISINSH', null=True)),
                ('domainkeyword', models.TextField(blank=True, db_column='DOMAINKEYWORD', null=True)),
                ('banktype', models.TextField(blank=True, db_column='BANKTYPE', null=True)),
                ('bankaddress', models.TextField(blank=True, db_column='BANKADDRESS', null=True)),
                ('bankbranch', models.TextField(blank=True, db_column='BANKBRANCH', null=True)),
                ('banknumber', models.TextField(blank=True, db_column='BANKNUMBER', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_base_info',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertBaseLog',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_base_log', models.TextField(db_column='ID_EXPERT_BASE_LOG')),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('updatemanager', models.TextField(blank=True, db_column='UPDATEMANAGER', null=True)),
                ('info', models.TextField(blank=True, db_column='INFO', null=True)),
                ('date_in', models.TextField(blank=True, db_column='DATE_IN', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_base_log',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertCheckList',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expertcheck_list', models.TextField(db_column='ID_EXPERTCHECK_LIST')),
                ('source', models.TextField(blank=True, db_column='SOURCE', null=True)),
                ('projectgroupid', models.TextField(blank=True, db_column='PROJECTGROUPID', null=True)),
                ('projectgroupname', models.TextField(blank=True, db_column='PROJECTGROUPNAME', null=True)),
                ('projectnum', models.TextField(blank=True, db_column='PROJECTNUM', null=True)),
                ('cscode', models.TextField(blank=True, db_column='CSCODE', null=True)),
                ('startcheckupdate', models.TextField(blank=True, db_column='STARTCHECKUPDATE', null=True)),
                ('endcheckupdate', models.TextField(blank=True, db_column='ENDCHECKUPDATE', null=True)),
                ('sended', models.TextField(blank=True, db_column='SENDED', null=True)),
                ('finished', models.TextField(blank=True, db_column='FINISHED', null=True)),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_check_list',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertCheckState',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('state', models.TextField(blank=True, db_column='STATE', null=True)),
                ('currentgroupnum', models.TextField(blank=True, db_column='CURRENTGROUPNUM', null=True)),
                ('currentprojectnum', models.TextField(blank=True, db_column='CURRENTPROJECTNUM', null=True)),
                ('totalgroupnum', models.TextField(blank=True, db_column='TOTALGROUPNUM', null=True)),
                ('totalprojectnum', models.TextField(blank=True, db_column='TOTALPROJECTNUM', null=True)),
                ('willgroupnum', models.TextField(blank=True, db_column='WILLGROUPNUM', null=True)),
                ('willprojectnum', models.TextField(blank=True, db_column='WILLPROJECTNUM', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_check_state',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertDesuetudeLog',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_desuetude_log', models.TextField(db_column='ID_EXPERT_DESUETUDE_LOG')),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('person', models.TextField(blank=True, db_column='PERSON', null=True)),
                ('createtime', models.TextField(blank=True, db_column='CREATETIME', null=True)),
                ('papermaterial', models.TextField(blank=True, db_column='PAPERMATERIAL', null=True)),
                ('remark', models.TextField(blank=True, db_column='REMARK', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_desuetude_log',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertFile',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_file', models.TextField(db_column='ID_EXPERT_FILE')),
                ('rel_id', models.TextField(blank=True, db_column='REL_ID', null=True)),
                ('path', models.TextField(blank=True, db_column='PATH', null=True)),
                ('dest_filename', models.TextField(blank=True, db_column='DEST_FILENAME', null=True)),
                ('file_name', models.TextField(blank=True, db_column='FILE_NAME', null=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_file',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertGrade',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_grade', models.TextField(db_column='ID_EXPERT_GRADE')),
                ('appraisal_date', models.TextField(blank=True, db_column='APPRAISAL_DATE', null=True)),
                ('ability_point', models.TextField(blank=True, db_column='ABILITY_POINT', null=True)),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_grade',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertOperationThanLog',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_operation_log', models.TextField(db_column='ID_EXPERT_OPERATION_LOG')),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('time', models.TextField(blank=True, db_column='TIME', null=True)),
                ('upoperation', models.TextField(blank=True, db_column='UPOPERATION', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_operation_than_log',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertPatent',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_patent', models.TextField(db_column='ID_EXPERT_PATENT')),
                ('patent_name', models.TextField(blank=True, db_column='PATENT_NAME', null=True)),
                ('patent_domain', models.TextField(blank=True, db_column='PATENT_DOMAIN', null=True)),
                ('patentee_seq', models.TextField(blank=True, db_column='PATENTEE_SEQ', null=True)),
                ('country', models.TextField(blank=True, db_column='COUNTRY', null=True)),
                ('patent_type', models.TextField(blank=True, db_column='PATENT_TYPE', null=True)),
                ('register_date', models.TextField(blank=True, db_column='REGISTER_DATE', null=True)),
                ('application', models.TextField(blank=True, db_column='APPLICATION', null=True)),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('ordernum', models.TextField(db_column='ORDERNUM')),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_patent',
            },
        ),
        migrations.CreateModel(
            name='DataImportExpertSendLog',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_send_log', models.TextField(db_column='ID_EXPERT_SEND_LOG')),
                ('sendname', models.TextField(blank=True, db_column='SENDNAME', null=True)),
                ('sendmailinfo', models.TextField(blank=True, db_column='SENDMAILINFO', null=True)),
                ('sendmobileinfo', models.TextField(blank=True, db_column='SENDMOBILEINFO', null=True)),
                ('sendtime', models.TextField(blank=True, db_column='SENDTIME', null=True)),
                ('sendmail1', models.TextField(blank=True, db_column='SENDMAIL1', null=True)),
                ('sendmail2', models.TextField(blank=True, db_column='SENDMAIL2', null=True)),
                ('sendmail3', models.TextField(blank=True, db_column='SENDMAIL3', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_expert_send_log',
            },
        ),
        migrations.CreateModel(
            name='DataImportJshtDjcExpert',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('sex', models.TextField(blank=True, db_column='SEX', null=True)),
                ('company', models.TextField(blank=True, db_column='COMPANY', null=True)),
                ('position', models.TextField(blank=True, db_column='POSITION', null=True)),
                ('document_number', models.TextField(blank=True, db_column='DOCUMENT_NUMBER', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_jsht_djc_expert',
            },
        ),
        migrations.CreateModel(
            name='DataImportJshtGxkycExpert',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('sex', models.TextField(blank=True, db_column='SEX', null=True)),
                ('company', models.TextField(blank=True, db_column='COMPANY', null=True)),
                ('position', models.TextField(blank=True, db_column='POSITION', null=True)),
                ('document_number', models.TextField(blank=True, db_column='DOCUMENT_NUMBER', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_jsht_gxkyc_expert',
            },
        ),
        migrations.CreateModel(
            name='DataImportJshtQsydwExpert',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('sex', models.TextField(blank=True, db_column='SEX', null=True)),
                ('company', models.TextField(blank=True, db_column='COMPANY', null=True)),
                ('company2', models.TextField(blank=True, db_column='COMPANY2', null=True)),
                ('position', models.TextField(blank=True, db_column='POSITION', null=True)),
                ('position2', models.TextField(blank=True, db_column='POSITION2', null=True)),
                ('document_number', models.TextField(blank=True, db_column='DOCUMENT_NUMBER', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
                ('mobile2', models.TextField(blank=True, null=True)),
                ('company_phone', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_jsht_qsydw_expert',
            },
        ),
        migrations.CreateModel(
            name='DataImportJshtZfjgExpert',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('sex', models.TextField(blank=True, db_column='SEX', null=True)),
                ('company', models.TextField(blank=True, db_column='COMPANY', null=True)),
                ('position', models.TextField(blank=True, db_column='POSITION', null=True)),
                ('document_number', models.TextField(blank=True, db_column='DOCUMENT_NUMBER', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
                ('mobile2', models.TextField(blank=True, null=True)),
                ('company_phone', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_jsht_zfjg_expert',
            },
        ),
        migrations.CreateModel(
            name='DataImportTask',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('id_expert_task', models.TextField(db_column='ID_EXPERT_TASK')),
                ('project_name', models.TextField(blank=True, db_column='PROJECT_NAME', null=True)),
                ('start_date', models.TextField(blank=True, db_column='START_DATE', null=True)),
                ('task_end_date', models.TextField(blank=True, db_column='TASK_END_DATE', null=True)),
                ('stakeholder', models.TextField(blank=True, db_column='STAKEHOLDER', null=True)),
                ('fund', models.TextField(blank=True, db_column='FUND', null=True)),
                ('effect', models.TextField(blank=True, db_column='EFFECT', null=True)),
                ('id_expert_base', models.TextField(blank=True, db_column='ID_EXPERT_BASE', null=True)),
                ('ordernum', models.TextField(db_column='ORDERNUM')),
            ],
            options={
                'managed': False,
                'db_table': 'data_import_task',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dept_id', models.TextField(blank=True, null=True)),
                ('dept_name', models.TextField(blank=True, null=True)),
                ('dept_code', models.TextField(blank=True, null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'department',
            },
        ),
        migrations.CreateModel(
            name='Downloadinfoconstract',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('info', models.TextField(db_column='Info')),
                ('area', models.TextField()),
                ('tag', models.TextField()),
            ],
            options={
                'managed': False,
                'db_table': 'downloadinfoconstract',
            },
        ),
        migrations.CreateModel(
            name='EnvAduitAccountTable',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('audit_id', models.TextField(blank=True, db_column='AUDIT_ID', null=True)),
                ('account_year', models.TextField(blank=True, db_column='ACCOUNT_YEAR', null=True)),
                ('account_money', models.TextField(blank=True, db_column='ACCOUNT_MONEY', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_aduit_account_table',
            },
        ),
        migrations.CreateModel(
            name='EnvAllHistorySupport',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('history_year', models.TextField(blank=True, db_column='HISTORY_YEAR', null=True)),
                ('doumcment_num', models.TextField(blank=True, db_column='DOUMCMENT_NUM', null=True)),
                ('case_type', models.TextField(blank=True, db_column='CASE_TYPE', null=True)),
                ('org_code', models.TextField(blank=True, db_column='ORG_CODE', null=True)),
                ('report_company', models.TextField(blank=True, db_column='REPORT_COMPANY', null=True)),
                ('project_name', models.TextField(blank=True, db_column='PROJECT_NAME', null=True)),
                ('pay_case', models.TextField(blank=True, db_column='PAY_CASE', null=True)),
                ('project_charge', models.TextField(blank=True, db_column='PROJECT_CHARGE', null=True)),
                ('service_type', models.TextField(blank=True, db_column='SERVICE_TYPE', null=True)),
                ('accept_num', models.TextField(blank=True, db_column='ACCEPT_NUM', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_all_history_support',
            },
        ),
        migrations.CreateModel(
            name='EnvAnimalReviewTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_id', models.TextField(db_column='REVIEW_ID', unique=True)),
                ('lead_opinion', models.TextField(blank=True, db_column='LEAD_OPINION', null=True)),
                ('organization_opinion', models.TextField(blank=True, db_column='ORGANIZATION_OPINION', null=True)),
                ('manager_opinion', models.TextField(blank=True, db_column='MANAGER_OPINION', null=True)),
                ('employee_opinion', models.TextField(blank=True, db_column='EMPLOYEE_OPINION', null=True)),
                ('labor_protection_opinion', models.TextField(blank=True, db_column='LABOR_PROTECTION_OPINION', null=True)),
                ('external_environment_opinion', models.TextField(blank=True, db_column='EXTERNAL_ENVIRONMENT_OPINION', null=True)),
                ('internal_environment_opinion', models.TextField(blank=True, db_column='INTERNAL_ENVIRONMENT_OPINION', null=True)),
                ('layout_opinion', models.TextField(blank=True, db_column='LAYOUT_OPINION', null=True)),
                ('retaining_structure_opinion', models.TextField(blank=True, db_column='RETAINING_STRUCTURE_OPINION', null=True)),
                ('wallandceiling_opinion', models.TextField(blank=True, db_column='WALLANDCEILING_OPINION', null=True)),
                ('floor_opinion', models.TextField(blank=True, db_column='FLOOR_OPINION', null=True)),
                ('corridor_opinion', models.TextField(blank=True, db_column='CORRIDOR_OPINION', null=True)),
                ('other', models.TextField(blank=True, db_column='OTHER', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_animal_review_table',
            },
        ),
        migrations.CreateModel(
            name='EnvApprovalCollectInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('approval_id', models.TextField(db_column='APPROVAL_ID')),
                ('project_id', models.TextField(db_column='PROJECT_ID')),
                ('project_name', models.TextField(blank=True, db_column='PROJECT_NAME', null=True)),
                ('high_tech_field', models.TextField(blank=True, db_column='HIGH_TECH_FIELD', null=True)),
                ('sub_high_tech_field', models.TextField(blank=True, db_column='SUB_HIGH_TECH_FIELD', null=True)),
                ('project_type', models.TextField(blank=True, db_column='PROJECT_TYPE', null=True)),
                ('research_content', models.TextField(blank=True, db_column='RESEARCH_CONTENT', null=True)),
                ('project_no', models.TextField(blank=True, db_column='PROJECT_NO', null=True)),
                ('inspection_indicator', models.TextField(blank=True, db_column='INSPECTION_INDICATOR', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_approval_collect_info',
            },
        ),
        migrations.CreateModel(
            name='EnvApprovalTable',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('undertake_opinion', models.TextField(blank=True, db_column='UNDERTAKE_OPINION', null=True)),
                ('first_undertake_opinion', models.TextField(blank=True, db_column='FIRST_UNDERTAKE_OPINION', null=True)),
                ('second_undertake_opinion', models.TextField(blank=True, db_column='SECOND_UNDERTAKE_OPINION', null=True)),
                ('undertake_person_id', models.TextField(blank=True, db_column='UNDERTAKE_PERSON_ID', null=True)),
                ('first_undertake_person_id', models.TextField(blank=True, db_column='FIRST_UNDERTAKE_PERSON_ID', null=True)),
                ('second_undertake_person_id', models.TextField(blank=True, db_column='SECOND_UNDERTAKE_PERSON_ID', null=True)),
                ('undertake_date', models.TextField(blank=True, db_column='UNDERTAKE_DATE', null=True)),
                ('first_undertake_date', models.TextField(blank=True, db_column='FIRST_UNDERTAKE_DATE', null=True)),
                ('second_undertake_date', models.TextField(blank=True, db_column='SECOND_UNDERTAKE_DATE', null=True)),
                ('undertake_result', models.TextField(blank=True, db_column='UNDERTAKE_RESULT', null=True)),
                ('first_undertake_result', models.TextField(blank=True, db_column='FIRST_UNDERTAKE_RESULT', null=True)),
                ('second_undertake_result', models.TextField(blank=True, db_column='SECOND_UNDERTAKE_RESULT', null=True)),
                ('audit_opinion', models.TextField(blank=True, db_column='AUDIT_OPINION', null=True)),
                ('audit_person_id', models.TextField(blank=True, db_column='AUDIT_PERSON_ID', null=True)),
                ('audit_date', models.TextField(blank=True, db_column='AUDIT_DATE', null=True)),
                ('audit_result', models.TextField(blank=True, db_column='AUDIT_RESULT', null=True)),
                ('approve_opinion', models.TextField(blank=True, db_column='APPROVE_OPINION', null=True)),
                ('approve_person_id', models.TextField(blank=True, db_column='APPROVE_PERSON_ID', null=True)),
                ('approve_date', models.TextField(blank=True, db_column='APPROVE_DATE', null=True)),
                ('approve_result', models.TextField(blank=True, db_column='APPROVE_RESULT', null=True)),
                ('council_opinion', models.TextField(blank=True, db_column='COUNCIL_OPINION', null=True)),
                ('council_date', models.TextField(blank=True, db_column='COUNCIL_DATE', null=True)),
                ('council_result', models.TextField(blank=True, db_column='COUNCIL_RESULT', null=True)),
                ('joint_conference_result', models.TextField(blank=True, db_column='JOINT_CONFERENCE_RESULT', null=True)),
                ('joint_conference_opinion', models.TextField(blank=True, db_column='JOINT_CONFERENCE_OPINION', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('support_mode', models.TextField(blank=True, db_column='SUPPORT_MODE', null=True)),
                ('support_budget', models.TextField(blank=True, db_column='SUPPORT_BUDGET', null=True)),
                ('finance_file_no', models.TextField(blank=True, db_column='FINANCE_FILE_NO', null=True)),
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('remark', models.TextField(blank=True, db_column='REMARK', null=True)),
                ('is_belong', models.TextField(blank=True, db_column='IS_BELONG', null=True)),
                ('is_fit', models.TextField(blank=True, db_column='IS_FIT', null=True)),
                ('is_fit_first', models.TextField(blank=True, db_column='IS_FIT_FIRST', null=True)),
                ('is_fit_second', models.TextField(blank=True, db_column='IS_FIT_SECOND', null=True)),
                ('undertake_person_name', models.TextField(blank=True, db_column='UNDERTAKE_PERSON_NAME', null=True)),
                ('first_undertake_person_name', models.TextField(blank=True, db_column='FIRST_UNDERTAKE_PERSON_NAME', null=True)),
                ('second_undertake_person_name', models.TextField(blank=True, db_column='SECOND_UNDERTAKE_PERSON_NAME', null=True)),
                ('audit_person_name', models.TextField(blank=True, db_column='AUDIT_PERSON_NAME', null=True)),
                ('approve_person_name', models.TextField(blank=True, db_column='APPROVE_PERSON_NAME', null=True)),
                ('is_intellectual_property_clear', models.TextField(blank=True, db_column='IS_INTELLECTUAL_PROPERTY_CLEAR', null=True)),
                ('project_situation', models.TextField(blank=True, db_column='PROJECT_SITUATION', null=True)),
                ('goverment_type', models.TextField(blank=True, db_column='GOVERMENT_TYPE', null=True)),
                ('undertake_suggest_budget', models.TextField(blank=True, db_column='UNDERTAKE_SUGGEST_BUDGET', null=True)),
                ('first_undertake_suggest_budget', models.TextField(blank=True, db_column='FIRST_UNDERTAKE_SUGGEST_BUDGET', null=True)),
                ('second_undertake_suggest_budget', models.TextField(blank=True, db_column='SECOND_UNDERTAKE_SUGGEST_BUDGET', null=True)),
                ('fund_source', models.TextField(blank=True, db_column='FUND_SOURCE', null=True)),
                ('total_budget', models.TextField(blank=True, db_column='TOTAL_BUDGET', null=True)),
                ('fund_of_this', models.TextField(blank=True, db_column='FUND_OF_THIS', null=True)),
                ('is_having_partner', models.TextField(blank=True, db_column='IS_HAVING_PARTNER', null=True)),
                ('allocated_budget', models.TextField(blank=True, db_column='ALLOCATED_BUDGET', null=True)),
                ('committee_date', models.TextField(blank=True, db_column='COMMITTEE_DATE', null=True)),
                ('fname', models.TextField(blank=True, db_column='FNAME', null=True)),
                ('sname', models.TextField(blank=True, db_column='SNAME', null=True)),
                ('implement_dead_line', models.TextField(blank=True, db_column='IMPLEMENT_DEAD_LINE', null=True)),
                ('declare_dead_line', models.TextField(blank=True, db_column='DECLARE_DEAD_LINE', null=True)),
                ('support_budget2', models.TextField(blank=True, db_column='SUPPORT_BUDGET2', null=True)),
                ('fund_of_next', models.TextField(blank=True, db_column='FUND_OF_NEXT', null=True)),
                ('fund_of_after_next', models.TextField(blank=True, db_column='FUND_OF_AFTER_NEXT', null=True)),
                ('contract_type', models.TextField(blank=True, db_column='CONTRACT_TYPE', null=True)),
                ('contract_amount', models.TextField(blank=True, db_column='CONTRACT_AMOUNT', null=True)),
                ('is_first_withdraw', models.TextField(blank=True, db_column='IS_FIRST_WITHDRAW', null=True)),
                ('is_second_withdraw', models.TextField(blank=True, db_column='IS_SECOND_WITHDRAW', null=True)),
                ('sustainable_result_one', models.TextField(blank=True, db_column='SUSTAINABLE_RESULT_ONE', null=True)),
                ('sustainable_result_two', models.TextField(blank=True, db_column='SUSTAINABLE_RESULT_TWO', null=True)),
                ('sustainable_result_three', models.TextField(blank=True, db_column='SUSTAINABLE_RESULT_THREE', null=True)),
                ('sustainable_result_four', models.TextField(blank=True, db_column='SUSTAINABLE_RESULT_FOUR', null=True)),
                ('sustainable_remark_one', models.TextField(blank=True, db_column='SUSTAINABLE_REMARK_ONE', null=True)),
                ('sustainable_remark_two', models.TextField(blank=True, db_column='SUSTAINABLE_REMARK_TWO', null=True)),
                ('sustainable_remark_three', models.TextField(blank=True, db_column='SUSTAINABLE_REMARK_THREE', null=True)),
                ('sustainable_remark_four', models.TextField(blank=True, db_column='SUSTAINABLE_REMARK_FOUR', null=True)),
                ('first_undertake_remarks', models.TextField(blank=True, db_column='FIRST_UNDERTAKE_REMARKS', null=True)),
                ('second_undertake_remarks', models.TextField(blank=True, db_column='SECOND_UNDERTAKE_REMARKS', null=True)),
                ('audit_remarks', models.TextField(blank=True, db_column='AUDIT_REMARKS', null=True)),
                ('approve_remarks', models.TextField(blank=True, db_column='APPROVE_REMARKS', null=True)),
                ('council_remarks', models.TextField(blank=True, db_column='COUNCIL_REMARKS', null=True)),
                ('council_name', models.TextField(blank=True, db_column='COUNCIL_NAME', null=True)),
                ('council_id', models.TextField(blank=True, db_column='COUNCIL_ID', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_approval_table',
            },
        ),
        migrations.CreateModel(
            name='EnvAuditTable',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('audit_user_id', models.TextField(blank=True, db_column='AUDIT_USER_ID', null=True)),
                ('review_type', models.TextField(blank=True, db_column='REVIEW_TYPE', null=True)),
                ('account_firm_name', models.TextField(blank=True, db_column='ACCOUNT_FIRM_NAME', null=True)),
                ('bussiness_year', models.TextField(blank=True, db_column='BUSSINESS_YEAR', null=True)),
                ('company_name', models.TextField(blank=True, db_column='COMPANY_NAME', null=True)),
                ('project_name', models.TextField(blank=True, db_column='PROJECT_NAME', null=True)),
                ('audit_content', models.TextField(blank=True, db_column='AUDIT_CONTENT', null=True)),
                ('company_base_info', models.TextField(blank=True, db_column='COMPANY_BASE_INFO', null=True)),
                ('audit_opinion', models.TextField(blank=True, db_column='AUDIT_OPINION', null=True)),
                ('organe_fee', models.TextField(blank=True, db_column='ORGANE_FEE', null=True)),
                ('promotion_fee', models.TextField(blank=True, db_column='PROMOTION_FEE', null=True)),
                ('meeting_fee', models.TextField(blank=True, db_column='MEETING_FEE', null=True)),
                ('guest_fee', models.TextField(blank=True, db_column='GUEST_FEE', null=True)),
                ('security_fee', models.TextField(blank=True, db_column='SECURITY_FEE', null=True)),
                ('other_fee', models.TextField(blank=True, db_column='OTHER_FEE', null=True)),
                ('total_fee', models.TextField(blank=True, db_column='TOTAL_FEE', null=True)),
                ('audit_problem', models.TextField(blank=True, db_column='AUDIT_PROBLEM', null=True)),
                ('audit_company', models.TextField(blank=True, db_column='AUDIT_COMPANY', null=True)),
                ('auditor', models.TextField(blank=True, db_column='AUDITOR', null=True)),
                ('accountants', models.TextField(blank=True, db_column='ACCOUNTANTS', null=True)),
                ('audit_time', models.TextField(blank=True, db_column='AUDIT_TIME', null=True)),
                ('budget_number', models.TextField(blank=True, db_column='BUDGET_NUMBER', null=True)),
                ('actual_expense_number', models.TextField(blank=True, db_column='ACTUAL_EXPENSE_NUMBER', null=True)),
                ('financial_aid', models.TextField(blank=True, db_column='FINANCIAL_AID', null=True)),
                ('audit_address', models.TextField(blank=True, db_column='AUDIT_ADDRESS', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('submit_time', models.TextField(blank=True, db_column='SUBMIT_TIME', null=True)),
                ('execution_start_time', models.TextField(blank=True, db_column='EXECUTION_START_TIME', null=True)),
                ('execution_end_time', models.TextField(blank=True, db_column='EXECUTION_END_TIME', null=True)),
                ('total_amount', models.TextField(blank=True, db_column='TOTAL_AMOUNT', null=True)),
                ('national_fund', models.TextField(blank=True, db_column='NATIONAL_FUND', null=True)),
                ('province_fund', models.TextField(blank=True, db_column='PROVINCE_FUND', null=True)),
                ('self_raised_fund', models.TextField(blank=True, db_column='SELF_RAISED_FUND', null=True)),
                ('have_support', models.TextField(blank=True, db_column='HAVE_SUPPORT', null=True)),
                ('apply_support', models.TextField(blank=True, db_column='APPLY_SUPPORT', null=True)),
                ('account_fund', models.TextField(blank=True, db_column='ACCOUNT_FUND', null=True)),
                ('joint_unit', models.TextField(blank=True, db_column='JOINT_UNIT', null=True)),
                ('joint_unit_unallocate', models.TextField(blank=True, db_column='JOINT_UNIT_UNALLOCATE', null=True)),
                ('joint_unit_allocate', models.TextField(blank=True, db_column='JOINT_UNIT_ALLOCATE', null=True)),
                ('requirement', models.TextField(blank=True, db_column='REQUIREMENT', null=True)),
                ('register_type', models.TextField(blank=True, db_column='REGISTER_TYPE', null=True)),
                ('register_capital', models.TextField(blank=True, db_column='REGISTER_CAPITAL', null=True)),
                ('register_date', models.TextField(blank=True, db_column='REGISTER_DATE', null=True)),
                ('represent_name', models.TextField(blank=True, db_column='REPRESENT_NAME', null=True)),
                ('principal_product', models.TextField(blank=True, db_column='PRINCIPAL_PRODUCT', null=True)),
                ('project_start_time', models.TextField(blank=True, db_column='PROJECT_START_TIME', null=True)),
                ('project_end_time', models.TextField(blank=True, db_column='PROJECT_END_TIME', null=True)),
                ('plan_type', models.TextField(blank=True, db_column='PLAN_TYPE', null=True)),
                ('project_depart', models.TextField(blank=True, db_column='PROJECT_DEPART', null=True)),
                ('match_ratio_require', models.TextField(blank=True, db_column='MATCH_RATIO_REQUIRE', null=True)),
                ('fund_depart', models.TextField(blank=True, db_column='FUND_DEPART', null=True)),
                ('issued_doc_number', models.TextField(blank=True, db_column='ISSUED_DOC_NUMBER', null=True)),
                ('cooperator1', models.TextField(blank=True, db_column='COOPERATOR1', null=True)),
                ('cooperator2', models.TextField(blank=True, db_column='COOPERATOR2', null=True)),
                ('cooperator3', models.TextField(blank=True, db_column='COOPERATOR3', null=True)),
                ('cooperator4', models.TextField(blank=True, db_column='COOPERATOR4', null=True)),
                ('cooperator5', models.TextField(blank=True, db_column='COOPERATOR5', null=True)),
                ('apply_total', models.TextField(blank=True, db_column='APPLY_TOTAL', null=True)),
                ('apply_total_acuumulate', models.TextField(blank=True, db_column='APPLY_TOTAL_ACUUMULATE', null=True)),
                ('apply_order', models.TextField(blank=True, db_column='APPLY_ORDER', null=True)),
                ('apply_notissued', models.TextField(blank=True, db_column='APPLY_NOTISSUED', null=True)),
                ('coop_total', models.TextField(blank=True, db_column='COOP_TOTAL', null=True)),
                ('coop_total_acuumulate', models.TextField(blank=True, db_column='COOP_TOTAL_ACUUMULATE', null=True)),
                ('coop_order', models.TextField(blank=True, db_column='COOP_ORDER', null=True)),
                ('coop_notissued', models.TextField(blank=True, db_column='COOP_NOTISSUED', null=True)),
                ('form_amount', models.TextField(blank=True, db_column='FORM_AMOUNT', null=True)),
                ('support_amount', models.TextField(blank=True, db_column='SUPPORT_AMOUNT', null=True)),
                ('this_support_amount', models.TextField(blank=True, db_column='THIS_SUPPORT_AMOUNT', null=True)),
                ('match_ratio', models.TextField(blank=True, db_column='MATCH_RATIO', null=True)),
                ('spend_apply_number', models.TextField(blank=True, db_column='SPEND_APPLY_NUMBER', null=True)),
                ('operate_expense', models.TextField(blank=True, db_column='OPERATE_EXPENSE', null=True)),
                ('transfer_spend_apply_num', models.TextField(blank=True, db_column='TRANSFER_SPEND_APPLY_NUM', null=True)),
                ('transfer_spend_approval_num', models.TextField(blank=True, db_column='TRANSFER_SPEND_APPROVAL_NUM', null=True)),
                ('transfer_in_apply_num', models.TextField(blank=True, db_column='TRANSFER_IN_APPLY_NUM', null=True)),
                ('transfer_in_approval_num', models.TextField(blank=True, db_column='TRANSFER_IN_APPROVAL_NUM', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_audit_table',
            },
        ),
        migrations.CreateModel(
            name='EnvBusinessReviewTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_id', models.TextField(db_column='REVIEW_ID', unique=True)),
                ('lead_opinion', models.TextField(blank=True, db_column='LEAD_OPINION', null=True)),
                ('organization_opinion', models.TextField(blank=True, db_column='ORGANIZATION_OPINION', null=True)),
                ('manager_opinion', models.TextField(blank=True, db_column='MANAGER_OPINION', null=True)),
                ('employee_opinion', models.TextField(blank=True, db_column='EMPLOYEE_OPINION', null=True)),
                ('labor_protection_opinion', models.TextField(blank=True, db_column='LABOR_PROTECTION_OPINION', null=True)),
                ('external_environment_opinion', models.TextField(blank=True, db_column='EXTERNAL_ENVIRONMENT_OPINION', null=True)),
                ('internal_environment_opinion', models.TextField(blank=True, db_column='INTERNAL_ENVIRONMENT_OPINION', null=True)),
                ('layout_opinion', models.TextField(blank=True, db_column='LAYOUT_OPINION', null=True)),
                ('retaining_structure_opinion', models.TextField(blank=True, db_column='RETAINING_STRUCTURE_OPINION', null=True)),
                ('wallandceiling_opinion', models.TextField(blank=True, db_column='WALLANDCEILING_OPINION', null=True)),
                ('floor_opinion', models.TextField(blank=True, db_column='FLOOR_OPINION', null=True)),
                ('corridor_opinion', models.TextField(blank=True, db_column='CORRIDOR_OPINION', null=True)),
                ('doorsandwindows_opinion', models.TextField(blank=True, db_column='DOORSANDWINDOWS_OPINION', null=True)),
                ('activities_opinion', models.TextField(blank=True, db_column='ACTIVITIES_OPINION', null=True)),
                ('ventilation_system_opinion', models.TextField(blank=True, db_column='VENTILATION_SYSTEM_OPINION', null=True)),
                ('drainage_opinion', models.TextField(blank=True, db_column='DRAINAGE_OPINION', null=True)),
                ('electrical_opinion', models.TextField(blank=True, db_column='ELECTRICAL_OPINION', null=True)),
                ('room_monitor_opinion', models.TextField(blank=True, db_column='ROOM_MONITOR_OPINION', null=True)),
                ('animal_opinion', models.TextField(blank=True, db_column='ANIMAL_OPINION', null=True)),
                ('feed_opinion', models.TextField(blank=True, db_column='FEED_OPINION', null=True)),
                ('bedding_opinion', models.TextField(blank=True, db_column='BEDDING_OPINION', null=True)),
                ('drinking_water_opinion', models.TextField(blank=True, db_column='DRINKING_WATER_OPINION', null=True)),
                ('basket_opinion', models.TextField(blank=True, db_column='BASKET_OPINION', null=True)),
                ('animal_house_opinion', models.TextField(blank=True, db_column='ANIMAL_HOUSE_OPINION', null=True)),
                ('cage_instruments_opinion', models.TextField(blank=True, db_column='CAGE_INSTRUMENTS_OPINION', null=True)),
                ('animal_welfare_opinion', models.TextField(blank=True, db_column='ANIMAL_WELFARE_OPINION', null=True)),
                ('animals_kill_opinion', models.TextField(blank=True, db_column='ANIMALS_KILL_OPINION', null=True)),
                ('waste_disposal_opinion', models.TextField(blank=True, db_column='WASTE_DISPOSAL_OPINION', null=True)),
                ('animals_corpse_opinion', models.TextField(blank=True, db_column='ANIMALS_CORPSE_OPINION', null=True)),
                ('special_animal_opinion', models.TextField(blank=True, db_column='SPECIAL_ANIMAL_OPINION', null=True)),
                ('management_opinion', models.TextField(blank=True, db_column='MANAGEMENT_OPINION', null=True)),
                ('laboratory_opinion', models.TextField(blank=True, db_column='LABORATORY_OPINION', null=True)),
                ('emergency_measures_opinion', models.TextField(blank=True, db_column='EMERGENCY_MEASURES_OPINION', null=True)),
                ('record_opinion', models.TextField(blank=True, db_column='RECORD_OPINION', null=True)),
                ('mechanism', models.TextField(blank=True, db_column='MECHANISM', null=True)),
                ('personner', models.TextField(blank=True, db_column='PERSONNER', null=True)),
                ('external', models.TextField(blank=True, db_column='EXTERNAL', null=True)),
                ('inside', models.TextField(blank=True, db_column='INSIDE', null=True)),
                ('architecture', models.TextField(blank=True, db_column='ARCHITECTURE', null=True)),
                ('environmental_indicator', models.TextField(blank=True, db_column='ENVIRONMENTAL_INDICATOR', null=True)),
                ('spf_level', models.TextField(blank=True, db_column='SPF_LEVEL', null=True)),
                ('clean_level', models.TextField(blank=True, db_column='CLEAN_LEVEL', null=True)),
                ('ordinary_level', models.TextField(blank=True, db_column='ORDINARY_LEVEL', null=True)),
                ('breeding_management', models.TextField(blank=True, db_column='BREEDING_MANAGEMENT', null=True)),
                ('rules_regulations', models.TextField(blank=True, db_column='RULES_REGULATIONS', null=True)),
                ('animal_experiment', models.TextField(blank=True, db_column='ANIMAL_EXPERIMENT', null=True)),
                ('review_report', models.TextField(blank=True, db_column='REVIEW_REPORT', null=True)),
                ('scope_application', models.TextField(blank=True, db_column='SCOPE_APPLICATION', null=True)),
                ('application_explain', models.TextField(blank=True, db_column='APPLICATION_EXPLAIN', null=True)),
                ('production_open_system', models.TextField(blank=True, db_column='PRODUCTION_OPEN_SYSTEM', null=True)),
                ('production_parclose_system', models.TextField(blank=True, db_column='PRODUCTION_PARCLOSE_SYSTEM', null=True)),
                ('production_segregate_system', models.TextField(blank=True, db_column='PRODUCTION_SEGREGATE_SYSTEM', null=True)),
                ('production_parclose_or_open', models.TextField(blank=True, db_column='PRODUCTION_PARCLOSE_OR_OPEN', null=True)),
                ('work_services', models.TextField(blank=True, db_column='WORK_SERVICES', null=True)),
                ('exist_services_city', models.TextField(blank=True, db_column='EXIST_SERVICES_CITY', null=True)),
                ('have_corporate_capacity', models.TextField(blank=True, db_column='HAVE_CORPORATE_CAPACITY', null=True)),
                ('have_bad_record', models.TextField(blank=True, db_column='HAVE_BAD_RECORD', null=True)),
                ('junior_college_scale', models.TextField(blank=True, db_column='JUNIOR_COLLEGE_SCALE', null=True)),
                ('production_total_area', models.TextField(blank=True, db_column='PRODUCTION_TOTAL_AREA', null=True)),
                ('income_scale', models.TextField(blank=True, db_column='INCOME_SCALE', null=True)),
                ('service_outsourcing_scale', models.TextField(blank=True, db_column='SERVICE_OUTSOURCING_SCALE', null=True)),
                ('have_internation_approve', models.TextField(blank=True, db_column='HAVE_INTERNATION_APPROVE', null=True)),
                ('hava_rd_ability', models.TextField(blank=True, db_column='HAVA_RD_ABILITY', null=True)),
                ('have_special_ability', models.TextField(blank=True, db_column='HAVE_SPECIAL_ABILITY', null=True)),
                ('project_oriented_one', models.TextField(blank=True, db_column='PROJECT_ORIENTED_ONE', null=True)),
                ('project_oriented_two', models.TextField(blank=True, db_column='PROJECT_ORIENTED_TWO', null=True)),
                ('project_oriented_three', models.TextField(blank=True, db_column='PROJECT_ORIENTED_THREE', null=True)),
                ('project_innovation_one', models.TextField(blank=True, db_column='PROJECT_INNOVATION_ONE', null=True)),
                ('project_innovation_two', models.TextField(blank=True, db_column='PROJECT_INNOVATION_TWO', null=True)),
                ('project_innovation_therr', models.TextField(blank=True, db_column='PROJECT_INNOVATION_THERR', null=True)),
                ('project_patent_one', models.TextField(blank=True, db_column='PROJECT_PATENT_ONE', null=True)),
                ('project_patent_two', models.TextField(blank=True, db_column='PROJECT_PATENT_TWO', null=True)),
                ('project_patent_three', models.TextField(blank=True, db_column='PROJECT_PATENT_THREE', null=True)),
                ('project_change_one', models.TextField(blank=True, db_column='PROJECT_CHANGE_ONE', null=True)),
                ('project_change_two', models.TextField(blank=True, db_column='PROJECT_CHANGE_TWO', null=True)),
                ('project_change_three', models.TextField(blank=True, db_column='PROJECT_CHANGE_THREE', null=True)),
                ('project_change_four', models.TextField(blank=True, db_column='PROJECT_CHANGE_FOUR', null=True)),
                ('project_material_one', models.TextField(blank=True, db_column='PROJECT_MATERIAL_ONE', null=True)),
                ('project_grade_all', models.TextField(blank=True, db_column='PROJECT_GRADE_ALL', null=True)),
                ('expert_conclusion', models.TextField(blank=True, db_column='EXPERT_CONCLUSION', null=True)),
                ('project_oriented_score_one', models.TextField(blank=True, db_column='PROJECT_ORIENTED_SCORE_ONE', null=True)),
                ('project_oriented_score_two', models.TextField(blank=True, db_column='PROJECT_ORIENTED_SCORE_TWO', null=True)),
                ('project_oriented_score_three', models.TextField(blank=True, db_column='PROJECT_ORIENTED_SCORE_THREE', null=True)),
                ('project_innovation_score_one', models.TextField(blank=True, db_column='PROJECT_INNOVATION_SCORE_ONE', null=True)),
                ('project_innovation_score_two', models.TextField(blank=True, db_column='PROJECT_INNOVATION_SCORE_TWO', null=True)),
                ('project_innovation_score_therr', models.TextField(blank=True, db_column='PROJECT_INNOVATION_SCORE_THERR', null=True)),
                ('project_patent_score_one', models.TextField(blank=True, db_column='PROJECT_PATENT_SCORE_ONE', null=True)),
                ('project_patent_score_two', models.TextField(blank=True, db_column='PROJECT_PATENT_SCORE_TWO', null=True)),
                ('project_patent_score_three', models.TextField(blank=True, db_column='PROJECT_PATENT_SCORE_THREE', null=True)),
                ('project_change_score_one', models.TextField(blank=True, db_column='PROJECT_CHANGE_SCORE_ONE', null=True)),
                ('project_change_score_two', models.TextField(blank=True, db_column='PROJECT_CHANGE_SCORE_TWO', null=True)),
                ('project_change_score_three', models.TextField(blank=True, db_column='PROJECT_CHANGE_SCORE_THREE', null=True)),
                ('project_change_score_four', models.TextField(blank=True, db_column='PROJECT_CHANGE_SCORE_FOUR', null=True)),
                ('project_material_score_one', models.TextField(blank=True, db_column='PROJECT_MATERIAL_SCORE_ONE', null=True)),
                ('project_familiarity', models.TextField(blank=True, db_column='PROJECT_FAMILIARITY', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_business_review_table',
            },
        ),
        migrations.CreateModel(
            name='EnvCertificateFinishTable',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('result', models.TextField(blank=True, db_column='RESULT', null=True)),
                ('certificate_name', models.TextField(blank=True, db_column='CERTIFICATE_NAME', null=True)),
                ('certificate_id', models.TextField(blank=True, db_column='CERTIFICATE_ID', null=True)),
                ('certificate_start_time', models.TextField(blank=True, db_column='CERTIFICATE_START_TIME', null=True)),
                ('certificate_end_time', models.TextField(blank=True, db_column='CERTIFICATE_END_TIME', null=True)),
                ('charge', models.TextField(blank=True, db_column='CHARGE', null=True)),
                ('finished_time', models.TextField(blank=True, db_column='FINISHED_TIME', null=True)),
                ('finished_persion', models.TextField(blank=True, db_column='FINISHED_PERSION', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('return_resion', models.TextField(blank=True, db_column='RETURN_RESION', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_certificate_finish_table',
            },
        ),
        migrations.CreateModel(
            name='EnvCollectExpertInfo',
            fields=[
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('unitandduty', models.TextField(blank=True, db_column='UNITANDDUTY', null=True)),
                ('phone', models.TextField(blank=True, db_column='PHONE', null=True)),
                ('add_time', models.TextField(blank=True, db_column='ADD_TIME', null=True)),
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_collect_expert_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCollectInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.TextField(db_column='PROJECT_ID', unique=True)),
                ('plantype', models.TextField(blank=True, db_column='PLANTYPE', null=True)),
                ('projecttype', models.TextField(blank=True, db_column='PROJECTTYPE', null=True)),
                ('operation_time', models.TextField(blank=True, db_column='OPERATION_TIME', null=True)),
                ('reject_times', models.TextField(blank=True, db_column='REJECT_TIMES', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_collect_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyAccessoryInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('company_base_info_id', models.TextField(db_column='COMPANY_BASE_INFO_ID')),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('file_id', models.TextField(blank=True, db_column='FILE_ID', null=True)),
                ('sequence', models.TextField(blank=True, db_column='SEQUENCE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_accessory_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyAccessoryInfoCopy',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('company_base_info_id', models.TextField(db_column='COMPANY_BASE_INFO_ID')),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('file_id', models.TextField(blank=True, db_column='FILE_ID', null=True)),
                ('sequence', models.TextField(blank=True, db_column='SEQUENCE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_accessory_info_copy',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyBaseInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('company_id', models.TextField(blank=True, db_column='COMPANY_ID', null=True)),
                ('year', models.TextField(db_column='YEAR')),
                ('company_name', models.TextField(blank=True, db_column='COMPANY_NAME', null=True)),
                ('company_address', models.TextField(blank=True, db_column='COMPANY_ADDRESS', null=True)),
                ('register_capital', models.TextField(blank=True, db_column='REGISTER_CAPITAL', null=True)),
                ('register_date', models.TextField(blank=True, db_column='REGISTER_DATE', null=True)),
                ('register_region', models.TextField(blank=True, db_column='REGISTER_REGION', null=True)),
                ('register_street', models.TextField(blank=True, db_column='REGISTER_STREET', null=True)),
                ('office_region', models.TextField(blank=True, db_column='OFFICE_REGION', null=True)),
                ('factory_region', models.TextField(blank=True, db_column='FACTORY_REGION', null=True)),
                ('org_code', models.TextField(blank=True, db_column='ORG_CODE', null=True)),
                ('license_code', models.TextField(blank=True, db_column='LICENSE_CODE', null=True)),
                ('national_tax_code', models.TextField(blank=True, db_column='NATIONAL_TAX_CODE', null=True)),
                ('local_tax_code', models.TextField(blank=True, db_column='LOCAL_TAX_CODE', null=True)),
                ('deposit_bank', models.TextField(blank=True, db_column='DEPOSIT_BANK', null=True)),
                ('credit_degree', models.TextField(blank=True, db_column='CREDIT_DEGREE', null=True)),
                ('deposit_bank_number', models.TextField(blank=True, db_column='DEPOSIT_BANK_NUMBER', null=True)),
                ('register_type', models.TextField(blank=True, db_column='REGISTER_TYPE', null=True)),
                ('website_url', models.TextField(blank=True, db_column='WEBSITE_URL', null=True)),
                ('qualification', models.TextField(blank=True, db_column='QUALIFICATION', null=True)),
                ('business_scope', models.TextField(blank=True, db_column='BUSINESS_SCOPE', null=True)),
                ('principal_product', models.TextField(blank=True, db_column='PRINCIPAL_PRODUCT', null=True)),
                ('industry_type', models.TextField(blank=True, db_column='INDUSTRY_TYPE', null=True)),
                ('industry_category', models.TextField(blank=True, db_column='INDUSTRY_CATEGORY', null=True)),
                ('industry_kind', models.TextField(blank=True, db_column='INDUSTRY_KIND', null=True)),
                ('industry_small_kind', models.TextField(blank=True, db_column='INDUSTRY_SMALL_KIND', null=True)),
                ('high_tech_field', models.TextField(blank=True, db_column='HIGH_TECH_FIELD', null=True)),
                ('high_tech_subfield', models.TextField(blank=True, db_column='HIGH_TECH_SUBFIELD', null=True)),
                ('research_office_space', models.TextField(blank=True, db_column='RESEARCH_OFFICE_SPACE', null=True)),
                ('factory_space', models.TextField(blank=True, db_column='FACTORY_SPACE', null=True)),
                ('offshore_sales_unit_count', models.TextField(blank=True, db_column='OFFSHORE_SALES_UNIT_COUNT', null=True)),
                ('offshore_resarch_unit_count', models.TextField(blank=True, db_column='OFFSHORE_RESARCH_UNIT_COUNT', null=True)),
                ('year_power_consumption', models.TextField(blank=True, db_column='YEAR_POWER_CONSUMPTION', null=True)),
                ('year_water_consumption', models.TextField(blank=True, db_column='YEAR_WATER_CONSUMPTION', null=True)),
                ('stock_exchange', models.TextField(blank=True, db_column='STOCK_EXCHANGE', null=True)),
                ('ipo_date', models.TextField(blank=True, db_column='IPO_DATE', null=True)),
                ('stock_code', models.TextField(blank=True, db_column='STOCK_CODE', null=True)),
                ('total_eployee_count', models.TextField(blank=True, db_column='TOTAL_EPLOYEE_COUNT', null=True)),
                ('male_eployee_count', models.TextField(blank=True, db_column='MALE_EPLOYEE_COUNT', null=True)),
                ('female_eployee_count', models.TextField(blank=True, db_column='FEMALE_EPLOYEE_COUNT', null=True)),
                ('social_insurance_eployee_count', models.TextField(blank=True, db_column='SOCIAL_INSURANCE_EPLOYEE_COUNT', null=True)),
                ('returned_student_count', models.TextField(blank=True, db_column='RETURNED_STUDENT_COUNT', null=True)),
                ('foreign_expert_count', models.TextField(blank=True, db_column='FOREIGN_EXPERT_COUNT', null=True)),
                ('graduate_count', models.TextField(blank=True, db_column='GRADUATE_COUNT', null=True)),
                ('hr_eployee_count', models.TextField(blank=True, db_column='HR_EPLOYEE_COUNT', null=True)),
                ('sales_eployee_count', models.TextField(blank=True, db_column='SALES_EPLOYEE_COUNT', null=True)),
                ('rd_eployee_count', models.TextField(blank=True, db_column='RD_EPLOYEE_COUNT', null=True)),
                ('manufacture_eployee_count', models.TextField(blank=True, db_column='MANUFACTURE_EPLOYEE_COUNT', null=True)),
                ('other_job_count', models.TextField(blank=True, db_column='OTHER_JOB_COUNT', null=True)),
                ('doctor_eployee_count', models.TextField(blank=True, db_column='DOCTOR_EPLOYEE_COUNT', null=True)),
                ('master_eployee_count', models.TextField(blank=True, db_column='MASTER_EPLOYEE_COUNT', null=True)),
                ('undergraduate_eployee_count', models.TextField(blank=True, db_column='UNDERGRADUATE_EPLOYEE_COUNT', null=True)),
                ('junior_college_eployee_count', models.TextField(blank=True, db_column='JUNIOR_COLLEGE_EPLOYEE_COUNT', null=True)),
                ('otehr_degree_eployee_count', models.TextField(blank=True, db_column='OTEHR_DEGREE_EPLOYEE_COUNT', null=True)),
                ('sinior_eployee_professor', models.TextField(blank=True, db_column='SINIOR_EPLOYEE_PROFESSOR', null=True)),
                ('midium_eployee_professor', models.TextField(blank=True, db_column='MIDIUM_EPLOYEE_PROFESSOR', null=True)),
                ('junior_eployee_professor', models.TextField(blank=True, db_column='JUNIOR_EPLOYEE_PROFESSOR', null=True)),
                ('other_title_eployee_professor', models.TextField(blank=True, db_column='OTHER_TITLE_EPLOYEE_PROFESSOR', null=True)),
                ('icp_license_number', models.TextField(blank=True, db_column='ICP_LICENSE_NUMBER', null=True)),
                ('isp_license_number', models.TextField(blank=True, db_column='ISP_LICENSE_NUMBER', null=True)),
                ('paicl_up_capital', models.TextField(blank=True, db_column='PAICL_UP_CAPITAL', null=True)),
                ('corporate_representative_major', models.TextField(blank=True, db_column='CORPORATE_REPRESENTATIVE_MAJOR', null=True)),
                ('corporate_representative_resume', models.TextField(blank=True, db_column='CORPORATE_REPRESENTATIVE_RESUME', null=True)),
                ('institution_introduction', models.TextField(blank=True, db_column='INSTITUTION_INTRODUCTION', null=True)),
                ('total_net_cashflow', models.TextField(blank=True, db_column='TOTAL_NET_CASHFLOW', null=True)),
                ('operation_net_cashflow', models.TextField(blank=True, db_column='OPERATION_NET_CASHFLOW', null=True)),
                ('sales_income', models.TextField(blank=True, db_column='SALES_INCOME', null=True)),
                ('promotion_expense', models.TextField(blank=True, db_column='PROMOTION_EXPENSE', null=True)),
                ('governmnet_loan', models.TextField(blank=True, db_column='GOVERNMNET_LOAN', null=True)),
                ('matured_governmnet_loan', models.TextField(blank=True, db_column='MATURED_GOVERNMNET_LOAN', null=True)),
                ('summary', models.TextField(blank=True, db_column='SUMMARY', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('version', models.TextField(blank=True, db_column='VERSION', null=True)),
                ('submitdate', models.TextField(blank=True, db_column='SUBMITDATE', null=True)),
                ('lastmodified', models.TextField(blank=True, db_column='LASTMODIFIED', null=True)),
                ('item_year', models.TextField(blank=True, db_column='ITEM_YEAR', null=True)),
                ('contact_person', models.TextField(blank=True, db_column='CONTACT_PERSON', null=True)),
                ('contact_mobile', models.TextField(blank=True, db_column='CONTACT_MOBILE', null=True)),
                ('remark', models.TextField(blank=True, db_column='REMARK', null=True)),
                ('open_start_time', models.TextField(blank=True, db_column='OPEN_START_TIME', null=True)),
                ('open_end_time', models.TextField(blank=True, db_column='OPEN_END_TIME', null=True)),
                ('zwdtsw_user_id', models.TextField(blank=True, db_column='ZWDTSW_USER_ID', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_base_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyEployeeInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('company_base_info_id', models.TextField(blank=True, db_column='COMPANY_BASE_INFO_ID', null=True)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('title', models.TextField(blank=True, db_column='TITLE', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
                ('education_degree', models.TextField(blank=True, db_column='EDUCATION_DEGREE', null=True)),
                ('security_id', models.TextField(blank=True, db_column='SECURITY_ID', null=True)),
                ('email', models.TextField(blank=True, db_column='EMAIL', null=True)),
                ('positional_title', models.TextField(blank=True, db_column='POSITIONAL_TITLE', null=True)),
                ('post', models.TextField(blank=True, db_column='POST', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_eployee_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyFinanceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_base_info_id', models.TextField(db_column='COMPANY_BASE_INFO_ID', unique=True)),
                ('total_income', models.TextField(blank=True, db_column='TOTAL_INCOME', null=True)),
                ('main_income', models.TextField(blank=True, db_column='MAIN_INCOME', null=True)),
                ('high_tech_product_income', models.TextField(blank=True, db_column='HIGH_TECH_PRODUCT_INCOME', null=True)),
                ('software_product_income', models.TextField(blank=True, db_column='SOFTWARE_PRODUCT_INCOME', null=True)),
                ('total_industrial_value', models.TextField(blank=True, db_column='TOTAL_INDUSTRIAL_VALUE', null=True)),
                ('high_tech_product_value', models.TextField(blank=True, db_column='HIGH_TECH_PRODUCT_VALUE', null=True)),
                ('pro_int_right_value', models.TextField(blank=True, db_column='PRO_INT_RIGHT_VALUE', null=True)),
                ('total_increase_value', models.TextField(blank=True, db_column='TOTAL_INCREASE_VALUE', null=True)),
                ('employee_rem_increase_value', models.TextField(blank=True, db_column='EMPLOYEE_REM_INCREASE_VALUE', null=True)),
                ('dep_fix_assets_value', models.TextField(blank=True, db_column='DEP_FIX_ASSETS_VALUE', null=True)),
                ('manufacture_net_tax', models.TextField(blank=True, db_column='MANUFACTURE_NET_TAX', null=True)),
                ('operation_net_value', models.TextField(blank=True, db_column='OPERATION_NET_VALUE', null=True)),
                ('total_export_value', models.TextField(blank=True, db_column='TOTAL_EXPORT_VALUE', null=True)),
                ('high_tech_export_value', models.TextField(blank=True, db_column='HIGH_TECH_EXPORT_VALUE', null=True)),
                ('net_margin', models.TextField(blank=True, db_column='NET_MARGIN', null=True)),
                ('total_tax', models.TextField(blank=True, db_column='TOTAL_TAX', null=True)),
                ('value_added_tax', models.TextField(blank=True, db_column='VALUE_ADDED_TAX', null=True)),
                ('operation_tax', models.TextField(blank=True, db_column='OPERATION_TAX', null=True)),
                ('income_tax', models.TextField(blank=True, db_column='INCOME_TAX', null=True)),
                ('personal_income_tax', models.TextField(blank=True, db_column='PERSONAL_INCOME_TAX', null=True)),
                ('other_tax', models.TextField(blank=True, db_column='OTHER_TAX', null=True)),
                ('total_relief_tax', models.TextField(blank=True, db_column='TOTAL_RELIEF_TAX', null=True)),
                ('relief_value_added_tax', models.TextField(blank=True, db_column='RELIEF_VALUE_ADDED_TAX', null=True)),
                ('relief_operation_tax', models.TextField(blank=True, db_column='RELIEF_OPERATION_TAX', null=True)),
                ('relief_income_tax', models.TextField(blank=True, db_column='RELIEF_INCOME_TAX', null=True)),
                ('relief_jjkc_tax', models.TextField(blank=True, db_column='RELIEF_JJKC_TAX', null=True)),
                ('relief_high_tech_pro_tax', models.TextField(blank=True, db_column='RELIEF_HIGH_TECH_PRO_TAX', null=True)),
                ('total_assets', models.TextField(blank=True, db_column='TOTAL_ASSETS', null=True)),
                ('total_liability', models.TextField(blank=True, db_column='TOTAL_LIABILITY', null=True)),
                ('total_fixed_assets', models.TextField(blank=True, db_column='TOTAL_FIXED_ASSETS', null=True)),
                ('fixed_assets_investment', models.TextField(blank=True, db_column='FIXED_ASSETS_INVESTMENT', null=True)),
                ('rd_expense', models.TextField(blank=True, db_column='RD_EXPENSE', null=True)),
                ('new_genery_income', models.TextField(blank=True, db_column='NEW_GENERY_INCOME', null=True)),
                ('env_pro_income', models.TextField(blank=True, db_column='ENV_PRO_INCOME', null=True)),
                ('financial_appropriation', models.TextField(blank=True, db_column='FINANCIAL_APPROPRIATION', null=True)),
                ('operation_income', models.TextField(blank=True, db_column='OPERATION_INCOME', null=True)),
                ('tech_act_income', models.TextField(blank=True, db_column='TECH_ACT_INCOME', null=True)),
                ('tech_prov_act_income', models.TextField(blank=True, db_column='TECH_PROV_ACT_INCOME', null=True)),
                ('tech_muni_act_income', models.TextField(blank=True, db_column='TECH_MUNI_ACT_INCOME', null=True)),
                ('tech_other_act_income', models.TextField(blank=True, db_column='TECH_OTHER_ACT_INCOME', null=True)),
                ('other_income', models.TextField(blank=True, db_column='OTHER_INCOME', null=True)),
                ('income_inscrease_ratio', models.TextField(blank=True, db_column='INCOME_INSCREASE_RATIO', null=True)),
                ('total_expense', models.TextField(blank=True, db_column='TOTAL_EXPENSE', null=True)),
                ('operation_expense', models.TextField(blank=True, db_column='OPERATION_EXPENSE', null=True)),
                ('tech_act_expense', models.TextField(blank=True, db_column='TECH_ACT_EXPENSE', null=True)),
                ('tech_other_expense', models.TextField(blank=True, db_column='TECH_OTHER_EXPENSE', null=True)),
                ('total_fix_assets_org_value', models.TextField(blank=True, db_column='TOTAL_FIX_ASSETS_ORG_VALUE', null=True)),
                ('total_rd_property_value', models.TextField(blank=True, db_column='TOTAL_RD_PROPERTY_VALUE', null=True)),
                ('total_rd_equipment_value', models.TextField(blank=True, db_column='TOTAL_RD_EQUIPMENT_VALUE', null=True)),
                ('total_other_fix_assets_org_value', models.TextField(blank=True, db_column='TOTAL_OTHER_FIX_ASSETS_ORG_VALUE', null=True)),
                ('fix_assets_inscrease_ratio', models.TextField(blank=True, db_column='FIX_ASSETS_INSCREASE_RATIO', null=True)),
                ('rd_equipment_inscrease_ratio', models.TextField(blank=True, db_column='RD_EQUIPMENT_INSCREASE_RATIO', null=True)),
                ('total_cash_balance', models.TextField(blank=True, db_column='TOTAL_CASH_BALANCE', null=True)),
                ('total_debt_capital', models.TextField(blank=True, db_column='TOTAL_DEBT_CAPITAL', null=True)),
                ('env_protected_income', models.TextField(blank=True, db_column='ENV_PROTECTED_INCOME', null=True)),
                ('org_code', models.TextField(blank=True, db_column='ORG_CODE', null=True)),
                ('item_year', models.TextField(blank=True, db_column='ITEM_YEAR', null=True)),
                ('pay_salary_income_total', models.TextField(blank=True, db_column='PAY_SALARY_INCOME_TOTAL', null=True)),
                ('high_tech_product_service_income', models.TextField(blank=True, db_column='HIGH_TECH_PRODUCT_SERVICE_INCOME', null=True)),
                ('major_support_income_tax_relief', models.TextField(blank=True, db_column='MAJOR_SUPPORT_INCOME_TAX_RELIEF', null=True)),
                ('tech_transport_income_tax_relief', models.TextField(blank=True, db_column='TECH_TRANSPORT_INCOME_TAX_RELIEF', null=True)),
                ('other_pref_tax', models.TextField(blank=True, db_column='OTHER_PREF_TAX', null=True)),
                ('company_income_tax', models.TextField(blank=True, db_column='COMPANY_INCOME_TAX', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_finance_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyFundHistory',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('company_id', models.TextField(blank=True, db_column='COMPANY_ID', null=True)),
                ('project_name', models.TextField(db_column='PROJECT_NAME')),
                ('sponsor', models.TextField(blank=True, db_column='SPONSOR', null=True)),
                ('approved_date', models.TextField(blank=True, db_column='APPROVED_DATE', null=True)),
                ('amount', models.TextField(blank=True, db_column='AMOUNT', null=True)),
                ('has_accepted', models.TextField(blank=True, db_column='HAS_ACCEPTED', null=True)),
                ('project_content', models.TextField(blank=True, db_column='PROJECT_CONTENT', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_fund_history',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyMonthlyReport',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('group_id', models.TextField(blank=True, db_column='GROUP_ID', null=True)),
                ('total_income', models.TextField(blank=True, db_column='TOTAL_INCOME', null=True)),
                ('main_income', models.TextField(blank=True, db_column='MAIN_INCOME', null=True)),
                ('high_tech_product_income', models.TextField(blank=True, db_column='HIGH_TECH_PRODUCT_INCOME', null=True)),
                ('software_product_income', models.TextField(blank=True, db_column='SOFTWARE_PRODUCT_INCOME', null=True)),
                ('total_industrial_value', models.TextField(blank=True, db_column='TOTAL_INDUSTRIAL_VALUE', null=True)),
                ('high_tech_product_value', models.TextField(blank=True, db_column='HIGH_TECH_PRODUCT_VALUE', null=True)),
                ('total_increase_value', models.TextField(blank=True, db_column='TOTAL_INCREASE_VALUE', null=True)),
                ('employee_rem_increase_value', models.TextField(blank=True, db_column='EMPLOYEE_REM_INCREASE_VALUE', null=True)),
                ('dep_fix_assets_value', models.TextField(blank=True, db_column='DEP_FIX_ASSETS_VALUE', null=True)),
                ('operation_margin', models.TextField(blank=True, db_column='OPERATION_MARGIN', null=True)),
                ('total_tax', models.TextField(blank=True, db_column='TOTAL_TAX', null=True)),
                ('value_added_tax', models.TextField(blank=True, db_column='VALUE_ADDED_TAX', null=True)),
                ('income_tax', models.TextField(blank=True, db_column='INCOME_TAX', null=True)),
                ('operation_tax', models.TextField(blank=True, db_column='OPERATION_TAX', null=True)),
                ('net_margin', models.TextField(blank=True, db_column='NET_MARGIN', null=True)),
                ('high_tech_protected_net_margin', models.TextField(blank=True, db_column='HIGH_TECH_PROTECTED_NET_MARGIN', null=True)),
                ('tech_relief_input', models.TextField(blank=True, db_column='TECH_RELIEF_INPUT', null=True)),
                ('total_export_value', models.TextField(blank=True, db_column='TOTAL_EXPORT_VALUE', null=True)),
                ('high_tech_export_value', models.TextField(blank=True, db_column='HIGH_TECH_EXPORT_VALUE', null=True)),
                ('item_date', models.TextField(blank=True, db_column='ITEM_DATE', null=True)),
                ('item_month', models.TextField(blank=True, db_column='ITEM_MONTH', null=True)),
                ('item_year', models.TextField(blank=True, db_column='ITEM_YEAR', null=True)),
                ('org_code', models.TextField(blank=True, db_column='ORG_CODE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_monthly_report',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyMonthlyReportAddtionalInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('group_id', models.TextField(blank=True, db_column='GROUP_ID', null=True)),
                ('informant', models.TextField(blank=True, db_column='INFORMANT', null=True)),
                ('informant_mobile', models.TextField(blank=True, db_column='INFORMANT_MOBILE', null=True)),
                ('item_year', models.TextField(blank=True, db_column='ITEM_YEAR', null=True)),
                ('org_code', models.TextField(blank=True, db_column='ORG_CODE', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_monthly_report_addtional_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyMonthlyReportFilter',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('group_id', models.TextField(db_column='GROUP_ID')),
                ('item_year', models.TextField(db_column='ITEM_YEAR')),
                ('index_value_jan', models.TextField(blank=True, db_column='INDEX_VALUE_JAN', null=True)),
                ('index_value_feb', models.TextField(blank=True, db_column='INDEX_VALUE_FEB', null=True)),
                ('index_value_mar', models.TextField(blank=True, db_column='INDEX_VALUE_MAR', null=True)),
                ('index_value_apr', models.TextField(blank=True, db_column='INDEX_VALUE_APR', null=True)),
                ('index_value_may', models.TextField(blank=True, db_column='INDEX_VALUE_MAY', null=True)),
                ('index_value_jun', models.TextField(blank=True, db_column='INDEX_VALUE_JUN', null=True)),
                ('index_value_jul', models.TextField(blank=True, db_column='INDEX_VALUE_JUL', null=True)),
                ('index_value_aug', models.TextField(blank=True, db_column='INDEX_VALUE_AUG', null=True)),
                ('index_value_sep', models.TextField(blank=True, db_column='INDEX_VALUE_SEP', null=True)),
                ('index_value_oct', models.TextField(blank=True, db_column='INDEX_VALUE_OCT', null=True)),
                ('index_value_nov', models.TextField(blank=True, db_column='INDEX_VALUE_NOV', null=True)),
                ('index_value_dec', models.TextField(blank=True, db_column='INDEX_VALUE_DEC', null=True)),
                ('index_value_all', models.TextField(blank=True, db_column='INDEX_VALUE_ALL', null=True)),
                ('index_value', models.TextField(blank=True, db_column='INDEX_VALUE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_monthly_report_filter',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyRdInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_base_info_id', models.TextField(db_column='COMPANY_BASE_INFO_ID', unique=True)),
                ('app_patent', models.TextField(blank=True, db_column='APP_PATENT', null=True)),
                ('app_pra_patent', models.TextField(blank=True, db_column='APP_PRA_PATENT', null=True)),
                ('app_sur_patent', models.TextField(blank=True, db_column='APP_SUR_PATENT', null=True)),
                ('own_patent', models.TextField(blank=True, db_column='OWN_PATENT', null=True)),
                ('own_pra_patent', models.TextField(blank=True, db_column='OWN_PRA_PATENT', null=True)),
                ('own_sur_patent', models.TextField(blank=True, db_column='OWN_SUR_PATENT', null=True)),
                ('pub_paper', models.TextField(blank=True, db_column='PUB_PAPER', null=True)),
                ('pub_tech_paper', models.TextField(blank=True, db_column='PUB_TECH_PAPER', null=True)),
                ('own_software', models.TextField(blank=True, db_column='OWN_SOFTWARE', null=True)),
                ('own_ic_layout', models.TextField(blank=True, db_column='OWN_IC_LAYOUT', null=True)),
                ('own_brand', models.TextField(blank=True, db_column='OWN_BRAND', null=True)),
                ('int_tech_stan', models.TextField(blank=True, db_column='INT_TECH_STAN', null=True)),
                ('discover_plant', models.TextField(blank=True, db_column='DISCOVER_PLANT', null=True)),
                ('own_medicine_cert', models.TextField(blank=True, db_column='OWN_MEDICINE_CERT', null=True)),
                ('nat_high_tech_reward', models.TextField(blank=True, db_column='NAT_HIGH_TECH_REWARD', null=True)),
                ('nat_key_lab', models.TextField(blank=True, db_column='NAT_KEY_LAB', null=True)),
                ('nat_engineering_center', models.TextField(blank=True, db_column='NAT_ENGINEERING_CENTER', null=True)),
                ('nat_project', models.TextField(blank=True, db_column='NAT_PROJECT', null=True)),
                ('national_subsidization', models.TextField(blank=True, db_column='NATIONAL_SUBSIDIZATION', null=True)),
                ('provincial_subsidization', models.TextField(blank=True, db_column='PROVINCIAL_SUBSIDIZATION', null=True)),
                ('municipal_subsidization', models.TextField(blank=True, db_column='MUNICIPAL_SUBSIDIZATION', null=True)),
                ('nat_tech_stan', models.TextField(blank=True, db_column='NAT_TECH_STAN', null=True)),
                ('ind_tech_stan', models.TextField(blank=True, db_column='IND_TECH_STAN', null=True)),
                ('pro_high_tech_reward', models.TextField(blank=True, db_column='PRO_HIGH_TECH_REWARD', null=True)),
                ('mun_high_tech_reward', models.TextField(blank=True, db_column='MUN_HIGH_TECH_REWARD', null=True)),
                ('pro_key_lab', models.TextField(blank=True, db_column='PRO_KEY_LAB', null=True)),
                ('mun_key_lab', models.TextField(blank=True, db_column='MUN_KEY_LAB', null=True)),
                ('pro_engineering_center', models.TextField(blank=True, db_column='PRO_ENGINEERING_CENTER', null=True)),
                ('mun_engineering_center', models.TextField(blank=True, db_column='MUN_ENGINEERING_CENTER', null=True)),
                ('pro_project', models.TextField(blank=True, db_column='PRO_PROJECT', null=True)),
                ('mun_project', models.TextField(blank=True, db_column='MUN_PROJECT', null=True)),
                ('authorised_software', models.TextField(blank=True, db_column='AUTHORISED_SOFTWARE', null=True)),
                ('item_year', models.TextField(blank=True, db_column='ITEM_YEAR', null=True)),
                ('org_code', models.TextField(blank=True, db_column='ORG_CODE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_rd_info',
            },
        ),
        migrations.CreateModel(
            name='EnvCompanyStockholderInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('company_base_info_id', models.TextField(blank=True, db_column='COMPANY_BASE_INFO_ID', null=True)),
                ('name', models.TextField(blank=True, db_column='NAME', null=True)),
                ('invest_amount', models.TextField(blank=True, db_column='INVEST_AMOUNT', null=True)),
                ('invest_type', models.TextField(blank=True, db_column='INVEST_TYPE', null=True)),
                ('invest_ratio', models.TextField(blank=True, db_column='INVEST_RATIO', null=True)),
                ('id_card', models.TextField(blank=True, db_column='ID_CARD', null=True)),
                ('citizen_type', models.TextField(blank=True, db_column='CITIZEN_TYPE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_company_stockholder_info',
            },
        ),
        migrations.CreateModel(
            name='EnvContractBaseInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('project_id', models.TextField(db_column='PROJECT_ID')),
                ('company_base_info_id', models.TextField(db_column='COMPANY_BASE_INFO_ID')),
                ('contract_num', models.TextField(blank=True, db_column='CONTRACT_NUM', null=True)),
                ('contract_type', models.TextField(blank=True, db_column='CONTRACT_TYPE', null=True)),
                ('total_invest_company', models.TextField(blank=True, db_column='TOTAL_INVEST_COMPANY', null=True)),
                ('total_invest', models.TextField(blank=True, db_column='TOTAL_INVEST', null=True)),
                ('third_represent', models.TextField(blank=True, db_column='THIRD_REPRESENT', null=True)),
                ('third_project_resonser', models.TextField(blank=True, db_column='THIRD_PROJECT_RESONSER', null=True)),
                ('third_resonser_contact', models.TextField(blank=True, db_column='THIRD_RESONSER_CONTACT', null=True)),
                ('create_time', models.TextField(blank=True, db_column='CREATE_TIME', null=True)),
                ('create_user', models.TextField(blank=True, db_column='CREATE_USER', null=True)),
                ('status', models.TextField(blank=True, db_column='STATUS', null=True)),
                ('officer_opinion', models.TextField(blank=True, db_column='OFFICER_OPINION', null=True)),
                ('fund_type', models.TextField(blank=True, db_column='FUND_TYPE', null=True)),
                ('first_part', models.TextField(blank=True, db_column='FIRST_PART', null=True)),
                ('second_part', models.TextField(blank=True, db_column='SECOND_PART', null=True)),
                ('third_part', models.TextField(blank=True, db_column='THIRD_PART', null=True)),
                ('project_fund', models.TextField(blank=True, db_column='PROJECT_FUND', null=True)),
                ('project_fund_low', models.TextField(blank=True, db_column='PROJECT_FUND_LOW', null=True)),
                ('second_project_fund', models.TextField(blank=True, db_column='SECOND_PROJECT_FUND', null=True)),
                ('second_fund_year_after', models.TextField(blank=True, db_column='SECOND_FUND_YEAR_AFTER', null=True)),
                ('second_fund_next_year', models.TextField(blank=True, db_column='SECOND_FUND_NEXT_YEAR', null=True)),
                ('second_fund_this_year', models.TextField(blank=True, db_column='SECOND_FUND_THIS_YEAR', null=True)),
                ('second_project_fund_low', models.TextField(blank=True, db_column='SECOND_PROJECT_FUND_LOW', null=True)),
                ('third_fund_this_year', models.TextField(blank=True, db_column='THIRD_FUND_THIS_YEAR', null=True)),
                ('third_fund_next_year', models.TextField(blank=True, db_column='THIRD_FUND_NEXT_YEAR', null=True)),
                ('third_fund_year_after', models.TextField(blank=True, db_column='THIRD_FUND_YEAR_AFTER', null=True)),
                ('third_project_fund', models.TextField(blank=True, db_column='THIRD_PROJECT_FUND', null=True)),
                ('third_project_fund_low', models.TextField(blank=True, db_column='THIRD_PROJECT_FUND_LOW', null=True)),
                ('second_bank_name', models.TextField(blank=True, db_column='SECOND_BANK_NAME', null=True)),
                ('second_bank_number', models.TextField(blank=True, db_column='SECOND_BANK_NUMBER', null=True)),
                ('third_bank_name', models.TextField(blank=True, db_column='THIRD_BANK_NAME', null=True)),
                ('third_bank_number', models.TextField(blank=True, db_column='THIRD_BANK_NUMBER', null=True)),
                ('contract_start_time', models.TextField(blank=True, db_column='CONTRACT_START_TIME', null=True)),
                ('contract_end_time', models.TextField(blank=True, db_column='CONTRACT_END_TIME', null=True)),
                ('contract_create_time', models.TextField(blank=True, db_column='CONTRACT_CREATE_TIME', null=True)),
                ('second_sign_time', models.TextField(blank=True, db_column='SECOND_SIGN_TIME', null=True)),
                ('third_sign_time', models.TextField(blank=True, db_column='THIRD_SIGN_TIME', null=True)),
                ('second_main_task', models.TextField(blank=True, db_column='SECOND_MAIN_TASK', null=True)),
                ('third_main_task', models.TextField(blank=True, db_column='THIRD_MAIN_TASK', null=True)),
                ('finish_level', models.TextField(blank=True, db_column='FINISH_LEVEL', null=True)),
                ('expert_display_type', models.TextField(blank=True, db_column='EXPERT_DISPLAY_TYPE', null=True)),
                ('expert_add_employment', models.TextField(blank=True, db_column='EXPERT_ADD_EMPLOYMENT', null=True)),
                ('expert_cultivate_docs', models.TextField(blank=True, db_column='EXPERT_CULTIVATE_DOCS', null=True)),
                ('expert_cultivate_masters', models.TextField(blank=True, db_column='EXPERT_CULTIVATE_MASTERS', null=True)),
                ('expert_cultivate_engineers', models.TextField(blank=True, db_column='EXPERT_CULTIVATE_ENGINEERS', null=True)),
                ('expert_cultivate_workers', models.TextField(blank=True, db_column='EXPERT_CULTIVATE_WORKERS', null=True)),
                ('expert_profits', models.TextField(blank=True, db_column='EXPERT_PROFITS', null=True)),
                ('total_sales', models.TextField(blank=True, db_column='TOTAL_SALES', null=True)),
                ('expert_tax', models.TextField(blank=True, db_column='EXPERT_TAX', null=True)),
                ('expert_money_input', models.TextField(blank=True, db_column='EXPERT_MONEY_INPUT', null=True)),
                ('expert_apply_invention', models.TextField(blank=True, db_column='EXPERT_APPLY_INVENTION', null=True)),
                ('expert_apply_utility', models.TextField(blank=True, db_column='EXPERT_APPLY_UTILITY', null=True)),
                ('expert_apply_model', models.TextField(blank=True, db_column='EXPERT_APPLY_MODEL', null=True)),
                ('expert_author_invention', models.TextField(blank=True, db_column='EXPERT_AUTHOR_INVENTION', null=True)),
                ('expert_author_utility', models.TextField(blank=True, db_column='EXPERT_AUTHOR_UTILITY', null=True)),
                ('expert_author_model', models.TextField(blank=True, db_column='EXPERT_AUTHOR_MODEL', null=True)),
                ('expert_publish_papers', models.TextField(blank=True, db_column='EXPERT_PUBLISH_PAPERS', null=True)),
                ('expert_publish_sci', models.TextField(blank=True, db_column='EXPERT_PUBLISH_SCI', null=True)),
                ('expert_publish_ei', models.TextField(blank=True, db_column='EXPERT_PUBLISH_EI', null=True)),
                ('expert_monograph_dometic', models.TextField(blank=True, db_column='EXPERT_MONOGRAPH_DOMETIC', null=True)),
                ('expert_monograph_foreign', models.TextField(blank=True, db_column='EXPERT_MONOGRAPH_FOREIGN', null=True)),
                ('complete_effect', models.TextField(blank=True, db_column='COMPLETE_EFFECT', null=True)),
                ('performance_rax', models.TextField(blank=True, db_column='PERFORMANCE_RAX', null=True)),
                ('all_budget_remark', models.TextField(blank=True, db_column='ALL_BUDGET_REMARK', null=True)),
                ('all_amount_use', models.TextField(blank=True, db_column='ALL_AMOUNT_USE', null=True)),
                ('second_budget_remark', models.TextField(blank=True, db_column='SECOND_BUDGET_REMARK', null=True)),
                ('third_budget_remark', models.TextField(blank=True, db_column='THIRD_BUDGET_REMARK', null=True)),
                ('equip_purchase_cost', models.TextField(blank=True, db_column='EQUIP_PURCHASE_COST', null=True)),
                ('equip_trial_cost', models.TextField(blank=True, db_column='EQUIP_TRIAL_COST', null=True)),
                ('equip_all_cost', models.TextField(blank=True, db_column='EQUIP_ALL_COST', null=True)),
                ('equip_remark', models.TextField(blank=True, db_column='EQUIP_REMARK', null=True)),
                ('incubation_area', models.TextField(blank=True, db_column='INCUBATION_AREA', null=True)),
                ('bear_form', models.TextField(blank=True, db_column='BEAR_FORM', null=True)),
                ('project_name', models.TextField(blank=True, db_column='PROJECT_NAME', null=True)),
                ('company_name', models.TextField(blank=True, db_column='COMPANY_NAME', null=True)),
                ('contact_persion', models.TextField(blank=True, db_column='CONTACT_PERSION', null=True)),
                ('contact_mobile', models.TextField(blank=True, db_column='CONTACT_MOBILE', null=True)),
                ('company_submit_time', models.TextField(blank=True, db_column='COMPANY_SUBMIT_TIME', null=True)),
                ('second_part_manager', models.TextField(blank=True, db_column='SECOND_PART_MANAGER', null=True)),
                ('second_part_mobile', models.TextField(blank=True, db_column='SECOND_PART_MOBILE', null=True)),
                ('second_part_addr', models.TextField(blank=True, db_column='SECOND_PART_ADDR', null=True)),
                ('office_charge_person', models.TextField(blank=True, db_column='OFFICE_CHARGE_PERSON', null=True)),
                ('project_charge_person', models.TextField(blank=True, db_column='PROJECT_CHARGE_PERSON', null=True)),
                ('project_charge_phone', models.TextField(blank=True, db_column='PROJECT_CHARGE_PHONE', null=True)),
                ('second_part_legal_person', models.TextField(blank=True, db_column='SECOND_PART_LEGAL_PERSON', null=True)),
                ('second_part_legal_mobile', models.TextField(blank=True, db_column='SECOND_PART_LEGAL_MOBILE', null=True)),
                ('third_part_legal_person', models.TextField(blank=True, db_column='THIRD_PART_LEGAL_PERSON', null=True)),
                ('third_part_legal_mobile', models.TextField(blank=True, db_column='THIRD_PART_LEGAL_MOBILE', null=True)),
                ('third_part_manager', models.TextField(blank=True, db_column='THIRD_PART_MANAGER', null=True)),
                ('third_part_mobile', models.TextField(blank=True, db_column='THIRD_PART_MOBILE', null=True)),
                ('peacock_team_name', models.TextField(blank=True, db_column='PEACOCK_TEAM_NAME', null=True)),
                ('team_member_names', models.TextField(blank=True, db_column='TEAM_MEMBER_NAMES', null=True)),
                ('gj_contract_start_time', models.TextField(blank=True, db_column='GJ_CONTRACT_START_TIME', null=True)),
                ('gj_contract_end_time', models.TextField(blank=True, db_column='GJ_CONTRACT_END_TIME', null=True)),
                ('return_rate_third', models.TextField(blank=True, db_column='RETURN_RATE_THIRD', null=True)),
                ('invest_amount_third', models.TextField(blank=True, db_column='INVEST_AMOUNT_THIRD', null=True)),
                ('period_hold_first', models.TextField(blank=True, db_column='PERIOD_HOLD_FIRST', null=True)),
                ('equity_first', models.TextField(blank=True, db_column='EQUITY_FIRST', null=True)),
                ('plan_category', models.TextField(blank=True, db_column='PLAN_CATEGORY', null=True)),
                ('superior_depart', models.TextField(blank=True, db_column='SUPERIOR_DEPART', null=True)),
                ('finance_file_no', models.TextField(blank=True, db_column='FINANCE_FILE_NO', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_contract_base_info',
            },
        ),
        migrations.CreateModel(
            name='EnvContractEquipmentInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('contract_id', models.TextField(blank=True, db_column='CONTRACT_ID', null=True)),
                ('name', models.TextField(db_column='NAME')),
                ('equipment_type', models.TextField(db_column='EQUIPMENT_TYPE')),
                ('amount', models.TextField(blank=True, db_column='AMOUNT', null=True)),
                ('unit', models.TextField(blank=True, db_column='UNIT', null=True)),
                ('price', models.TextField(blank=True, db_column='PRICE', null=True)),
                ('total', models.TextField(blank=True, db_column='TOTAL', null=True)),
                ('description', models.TextField(blank=True, db_column='DESCRIPTION', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_contract_equipment_info',
            },
        ),
        migrations.CreateModel(
            name='EnvContractFund',
            fields=[
                ('contract_id', models.TextField(blank=True, db_column='CONTRACT_ID', null=True)),
                ('sponsor', models.TextField(db_column='SPONSOR')),
                ('direct_expense', models.TextField(blank=True, db_column='DIRECT_EXPENSE', null=True)),
                ('equipment_expense', models.TextField(blank=True, db_column='EQUIPMENT_EXPENSE', null=True)),
                ('buy_equ_expense', models.TextField(blank=True, db_column='BUY_EQU_EXPENSE', null=True)),
                ('design_equ_expense', models.TextField(blank=True, db_column='DESIGN_EQU_EXPENSE', null=True)),
                ('rent_equ_expense', models.TextField(blank=True, db_column='RENT_EQU_EXPENSE', null=True)),
                ('material_expense', models.TextField(blank=True, db_column='MATERIAL_EXPENSE', null=True)),
                ('test_expense', models.TextField(blank=True, db_column='TEST_EXPENSE', null=True)),
                ('fuel_expense', models.TextField(blank=True, db_column='FUEL_EXPENSE', null=True)),
                ('travel_expense', models.TextField(blank=True, db_column='TRAVEL_EXPENSE', null=True)),
                ('meeting_expense', models.TextField(blank=True, db_column='MEETING_EXPENSE', null=True)),
                ('coooperation_exchange_expense', models.TextField(blank=True, db_column='COOOPERATION_EXCHANGE_EXPENSE', null=True)),
                ('transaction_expense', models.TextField(blank=True, db_column='TRANSACTION_EXPENSE', null=True)),
                ('service_expense', models.TextField(blank=True, db_column='SERVICE_EXPENSE', null=True)),
                ('expect_con_expense', models.TextField(blank=True, db_column='EXPECT_CON_EXPENSE', null=True)),
                ('staff_expense', models.TextField(blank=True, db_column='STAFF_EXPENSE', null=True)),
                ('other_expense', models.TextField(blank=True, db_column='OTHER_EXPENSE', null=True)),
                ('indirect_expense', models.TextField(blank=True, db_column='INDIRECT_EXPENSE', null=True)),
                ('water_gas_expense', models.TextField(blank=True, db_column='WATER_GAS_EXPENSE', null=True)),
                ('management_expense', models.TextField(blank=True, db_column='MANAGEMENT_EXPENSE', null=True)),
                ('performance_reword', models.TextField(blank=True, db_column='PERFORMANCE_REWORD', null=True)),
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('region_trial_expense', models.TextField(blank=True, db_column='REGION_TRIAL_EXPENSE', null=True)),
                ('other_description', models.TextField(blank=True, db_column='OTHER_DESCRIPTION', null=True)),
                ('enginerring_expense', models.TextField(blank=True, db_column='ENGINERRING_EXPENSE', null=True)),
                ('total_expense', models.TextField(blank=True, db_column='TOTAL_EXPENSE', null=True)),
                ('part_type', models.TextField(blank=True, db_column='PART_TYPE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_contract_fund',
            },
        ),
        migrations.CreateModel(
            name='EnvContractFundRemark',
            fields=[
                ('contract_id', models.TextField(blank=True, db_column='CONTRACT_ID', null=True)),
                ('sponsor', models.TextField(db_column='SPONSOR')),
                ('direct_expense', models.TextField(blank=True, db_column='DIRECT_EXPENSE', null=True)),
                ('equipment_expense', models.TextField(blank=True, db_column='EQUIPMENT_EXPENSE', null=True)),
                ('buy_equ_expense', models.TextField(blank=True, db_column='BUY_EQU_EXPENSE', null=True)),
                ('design_equ_expense', models.TextField(blank=True, db_column='DESIGN_EQU_EXPENSE', null=True)),
                ('rent_equ_expense', models.TextField(blank=True, db_column='RENT_EQU_EXPENSE', null=True)),
                ('material_expense', models.TextField(blank=True, db_column='MATERIAL_EXPENSE', null=True)),
                ('test_expense', models.TextField(blank=True, db_column='TEST_EXPENSE', null=True)),
                ('fuel_expense', models.TextField(blank=True, db_column='FUEL_EXPENSE', null=True)),
                ('travel_expense', models.TextField(blank=True, db_column='TRAVEL_EXPENSE', null=True)),
                ('meeting_expense', models.TextField(blank=True, db_column='MEETING_EXPENSE', null=True)),
                ('coooperation_exchange_expense', models.TextField(blank=True, db_column='COOOPERATION_EXCHANGE_EXPENSE', null=True)),
                ('transaction_expense', models.TextField(blank=True, db_column='TRANSACTION_EXPENSE', null=True)),
                ('service_expense', models.TextField(blank=True, db_column='SERVICE_EXPENSE', null=True)),
                ('expect_con_expense', models.TextField(blank=True, db_column='EXPECT_CON_EXPENSE', null=True)),
                ('staff_expense', models.TextField(blank=True, db_column='STAFF_EXPENSE', null=True)),
                ('other_expense', models.TextField(blank=True, db_column='OTHER_EXPENSE', null=True)),
                ('indirect_expense', models.TextField(blank=True, db_column='INDIRECT_EXPENSE', null=True)),
                ('water_gas_expense', models.TextField(blank=True, db_column='WATER_GAS_EXPENSE', null=True)),
                ('management_expense', models.TextField(blank=True, db_column='MANAGEMENT_EXPENSE', null=True)),
                ('performance_reword', models.TextField(blank=True, db_column='PERFORMANCE_REWORD', null=True)),
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('region_trial_expense', models.TextField(blank=True, db_column='REGION_TRIAL_EXPENSE', null=True)),
                ('other_description', models.TextField(blank=True, db_column='OTHER_DESCRIPTION', null=True)),
                ('enginerring_expense', models.TextField(blank=True, db_column='ENGINERRING_EXPENSE', null=True)),
                ('total_expense', models.TextField(blank=True, db_column='TOTAL_EXPENSE', null=True)),
                ('part_type', models.TextField(blank=True, db_column='PART_TYPE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_contract_fund_remark',
            },
        ),
        migrations.CreateModel(
            name='EnvContractMemberInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('contract_id', models.TextField(db_column='CONTRACT_ID')),
                ('member_name', models.TextField(blank=True, db_column='MEMBER_NAME', null=True)),
                ('role', models.TextField(blank=True, db_column='ROLE', null=True)),
                ('birth_date', models.TextField(blank=True, db_column='BIRTH_DATE', null=True)),
                ('title', models.TextField(blank=True, db_column='TITLE', null=True)),
                ('country', models.TextField(blank=True, db_column='COUNTRY', null=True)),
                ('edu_degree', models.TextField(blank=True, db_column='EDU_DEGREE', null=True)),
                ('major', models.TextField(blank=True, db_column='MAJOR', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
                ('security_id', models.TextField(blank=True, db_column='SECURITY_ID', null=True)),
                ('signature', models.TextField(blank=True, db_column='SIGNATURE', null=True)),
                ('start_date', models.TextField(blank=True, db_column='START_DATE', null=True)),
                ('work_desc', models.TextField(blank=True, db_column='WORK_DESC', null=True)),
                ('work_volume', models.TextField(blank=True, db_column='WORK_VOLUME', null=True)),
                ('main_resume', models.TextField(blank=True, db_column='MAIN_RESUME', null=True)),
                ('phone', models.TextField(blank=True, db_column='PHONE', null=True)),
                ('fax', models.TextField(blank=True, db_column='FAX', null=True)),
                ('email', models.TextField(blank=True, db_column='EMAIL', null=True)),
                ('company_name', models.TextField(blank=True, db_column='COMPANY_Name', null=True)),
                ('company_title', models.TextField(blank=True, db_column='COMPANY_TITLE', null=True)),
                ('sequence', models.TextField(blank=True, db_column='SEQUENCE', null=True)),
                ('security_type', models.TextField(blank=True, db_column='SECURITY_TYPE', null=True)),
                ('area_code', models.TextField(blank=True, db_column='AREA_CODE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_contract_member_info',
            },
        ),
        migrations.CreateModel(
            name='EnvContractSchedule',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('contract_id', models.TextField(blank=True, db_column='CONTRACT_ID', null=True)),
                ('phase', models.TextField(blank=True, db_column='PHASE', null=True)),
                ('start_date', models.TextField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.TextField(blank=True, db_column='END_DATE', null=True)),
                ('content_and_goal', models.TextField(blank=True, db_column='CONTENT_AND_GOAL', null=True)),
                ('self_raised_fund', models.TextField(blank=True, db_column='SELF_RAISED_FUND', null=True)),
                ('financial_fund', models.TextField(blank=True, db_column='FINANCIAL_FUND', null=True)),
                ('main_use_items', models.TextField(blank=True, db_column='MAIN_USE_ITEMS', null=True)),
                ('amount_use', models.TextField(blank=True, db_column='AMOUNT_USE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_contract_schedule',
            },
        ),
        migrations.CreateModel(
            name='EnvFounderProjectFund',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('sponsor', models.TextField(db_column='SPONSOR')),
                ('total_expense', models.TextField(blank=True, db_column='TOTAL_EXPENSE', null=True)),
                ('organization_expense', models.TextField(blank=True, db_column='ORGANIZATION_EXPENSE', null=True)),
                ('propaganda_expense', models.TextField(blank=True, db_column='PROPAGANDA_EXPENSE', null=True)),
                ('meeting_expense', models.TextField(blank=True, db_column='MEETING_EXPENSE', null=True)),
                ('meeting_field_expense', models.TextField(blank=True, db_column='MEETING_FIELD_EXPENSE', null=True)),
                ('meeting_equipment_expense', models.TextField(blank=True, db_column='MEETING_EQUIPMENT_EXPENSE', null=True)),
                ('meeting_data_expense', models.TextField(blank=True, db_column='MEETING_DATA_EXPENSE', null=True)),
                ('meeting_other_expense', models.TextField(blank=True, db_column='MEETING_OTHER_EXPENSE', null=True)),
                ('guest_expense', models.TextField(blank=True, db_column='GUEST_EXPENSE', null=True)),
                ('guest_traffic_expense', models.TextField(blank=True, db_column='GUEST_TRAFFIC_EXPENSE', null=True)),
                ('guest_accommodation_expense', models.TextField(blank=True, db_column='GUEST_ACCOMMODATION_EXPENSE', null=True)),
                ('guest_meals_expense', models.TextField(blank=True, db_column='GUEST_MEALS_EXPENSE', null=True)),
                ('guest_other_expense', models.TextField(blank=True, db_column='GUEST_OTHER_EXPENSE', null=True)),
                ('safty_and_traffic_security_expense', models.TextField(blank=True, db_column='SAFTY_AND_TRAFFIC_SECURITY_EXPENSE', null=True)),
                ('other_expense', models.TextField(blank=True, db_column='OTHER_EXPENSE', null=True)),
                ('other_reception_expense', models.TextField(blank=True, db_column='OTHER_RECEPTION_EXPENSE', null=True)),
                ('other_staff_expense', models.TextField(blank=True, db_column='OTHER_STAFF_EXPENSE', null=True)),
                ('other_other_expense', models.TextField(blank=True, db_column='OTHER_OTHER_EXPENSE', null=True)),
                ('other_description', models.TextField(blank=True, db_column='OTHER_DESCRIPTION', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_founder_project_fund',
            },
        ),
        migrations.CreateModel(
            name='EnvIncubatorInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.TextField(db_column='PROJECT_ID', unique=True)),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('headcount', models.TextField(blank=True, db_column='HEADCOUNT', null=True)),
                ('degrees_number', models.TextField(blank=True, db_column='DEGREES_NUMBER', null=True)),
                ('education_proportion', models.TextField(blank=True, db_column='EDUCATION_PROPORTION', null=True)),
                ('use_area', models.TextField(blank=True, db_column='USE_AREA', null=True)),
                ('service_area', models.TextField(blank=True, db_column='SERVICE_AREA', null=True)),
                ('service_proportion', models.TextField(blank=True, db_column='SERVICE_PROPORTION', null=True)),
                ('disposal_site_number', models.TextField(blank=True, db_column='DISPOSAL_SITE_NUMBER', null=True)),
                ('patent_number', models.TextField(blank=True, db_column='PATENT_NUMBER', null=True)),
                ('patent_proportion', models.TextField(blank=True, db_column='PATENT_PROPORTION', null=True)),
                ('cumulative_number', models.TextField(blank=True, db_column='CUMULATIVE_NUMBER', null=True)),
                ('jobs_number', models.TextField(blank=True, db_column='JOBS_NUMBER', null=True)),
                ('to_proportion', models.TextField(blank=True, db_column='TO_PROPORTION', null=True)),
                ('incubation_amount', models.TextField(blank=True, db_column='INCUBATION_AMOUNT', null=True)),
                ('training_proportion', models.TextField(blank=True, db_column='TRAINING_PROPORTION', null=True)),
                ('summary', models.TextField(blank=True, db_column='SUMMARY', null=True)),
                ('service_content', models.TextField(blank=True, db_column='SERVICE_CONTENT', null=True)),
                ('development', models.TextField(blank=True, db_column='DEVELOPMENT', null=True)),
                ('employment_work', models.TextField(blank=True, db_column='EMPLOYMENT_WORK', null=True)),
                ('performance_work', models.TextField(blank=True, db_column='PERFORMANCE_WORK', null=True)),
                ('incubator_name', models.TextField(blank=True, db_column='INCUBATOR_NAME', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_incubator_info',
            },
        ),
        migrations.CreateModel(
            name='EnvInvitationSystemMapping',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('item_id', models.TextField(blank=True, db_column='ITEM_ID', null=True)),
                ('guide', models.TextField(blank=True, db_column='GUIDE', null=True)),
                ('contact_person', models.TextField(blank=True, db_column='CONTACT_PERSON', null=True)),
                ('contact_mobile', models.TextField(blank=True, db_column='CONTACT_MOBILE', null=True)),
                ('contact_email', models.TextField(blank=True, db_column='CONTACT_EMAIL', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_invitation_system_mapping',
            },
        ),
        migrations.CreateModel(
            name='EnvPecialdays',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('start_end', models.TextField(db_column='START_END')),
                ('end_end', models.TextField(db_column='END_END')),
                ('type', models.TextField(db_column='TYPE')),
            ],
            options={
                'managed': False,
                'db_table': 'env_pecialdays',
            },
        ),
        migrations.CreateModel(
            name='EnvProjectAccessoryInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('project_id', models.TextField(db_column='PROJECT_ID')),
                ('type', models.TextField(blank=True, db_column='TYPE', null=True)),
                ('file_id', models.TextField(blank=True, db_column='FILE_ID', null=True)),
                ('sequence', models.TextField(blank=True, db_column='SEQUENCE', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_project_accessory_info',
            },
        ),
        migrations.CreateModel(
            name='EnvProjectAccountFirmInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('application_type', models.TextField(blank=True, db_column='APPLICATION_TYPE', null=True)),
                ('certificate_number', models.TextField(blank=True, db_column='CERTIFICATE_NUMBER', null=True)),
                ('declare_batch', models.TextField(blank=True, db_column='DECLARE_BATCH', null=True)),
                ('high_tech_field', models.TextField(blank=True, db_column='HIGH_TECH_FIELD', null=True)),
                ('sub_high_tech_field', models.TextField(blank=True, db_column='SUB_HIGH_TECH_FIELD', null=True)),
                ('account_firm_recent_year', models.TextField(blank=True, db_column='ACCOUNT_FIRM_RECENT_YEAR', null=True)),
                ('cpa_name_recent_year', models.TextField(blank=True, db_column='CPA_NAME_RECENT_YEAR', null=True)),
                ('account_firm_recent_3year', models.TextField(blank=True, db_column='ACCOUNT_FIRM_RECENT_3YEAR', null=True)),
                ('file_id', models.TextField(blank=True, db_column='FILE_ID', null=True)),
                ('is_different', models.TextField(blank=True, db_column='IS_DIFFERENT', null=True)),
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('cpa_name_recent_3year', models.TextField(blank=True, db_column='CPA_NAME_RECENT_3YEAR', null=True)),
                ('cpa_name_last_year', models.TextField(blank=True, db_column='CPA_NAME_LAST_YEAR', null=True)),
                ('cpa_name_prelast_year', models.TextField(blank=True, db_column='CPA_NAME_PRELAST_YEAR', null=True)),
                ('cpa_name_bef_prelast_year', models.TextField(blank=True, db_column='CPA_NAME_BEF_PRELAST_YEAR', null=True)),
                ('account_firm_last_year', models.TextField(blank=True, db_column='ACCOUNT_FIRM_LAST_YEAR', null=True)),
                ('account_firm_prelast_year', models.TextField(blank=True, db_column='ACCOUNT_FIRM_PRELAST_YEAR', null=True)),
                ('account_firm_bef_prelast_year', models.TextField(blank=True, db_column='ACCOUNT_FIRM_BEF_PRELAST_YEAR', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_project_account_firm_info',
            },
        ),
        migrations.CreateModel(
            name='EnvProjectAccountingInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.TextField(db_column='PROJECT_ID', unique=True)),
                ('contact_unit', models.TextField(blank=True, db_column='CONTACT_UNIT', null=True)),
                ('contact_plane', models.TextField(blank=True, db_column='CONTACT_PLANE', null=True)),
                ('email', models.TextField(blank=True, db_column='EMAIL', null=True)),
                ('mobile', models.TextField(blank=True, db_column='MOBILE', null=True)),
                ('address', models.TextField(blank=True, db_column='ADDRESS', null=True)),
                ('fax', models.TextField(blank=True, db_column='FAX', null=True)),
                ('postcode', models.TextField(blank=True, db_column='POSTCODE', null=True)),
                ('document_type', models.TextField(blank=True, db_column='DOCUMENT_TYPE', null=True)),
                ('identification_number', models.TextField(blank=True, db_column='IDENTIFICATION_NUMBER', null=True)),
                ('income_office', models.TextField(blank=True, db_column='INCOME_OFFICE', null=True)),
                ('income_accountant', models.TextField(blank=True, db_column='INCOME_ACCOUNTANT', null=True)),
                ('research_office', models.TextField(blank=True, db_column='RESEARCH_OFFICE', null=True)),
                ('research_accountant', models.TextField(blank=True, db_column='RESEARCH_ACCOUNTANT', null=True)),
                ('fourteen_office', models.TextField(blank=True, db_column='FOURTEEN_OFFICE', null=True)),
                ('fourteen_accountant', models.TextField(blank=True, db_column='FOURTEEN_ACCOUNTANT', null=True)),
                ('thirteen_office', models.TextField(blank=True, db_column='THIRTEEN_OFFICE', null=True)),
                ('thirteen_accountant', models.TextField(blank=True, db_column='THIRTEEN_ACCOUNTANT', null=True)),
                ('twelve_office', models.TextField(blank=True, db_column='TWELVE_OFFICE', null=True)),
                ('twelve_accountant', models.TextField(blank=True, db_column='TWELVE_ACCOUNTANT', null=True)),
                ('difference', models.TextField(blank=True, db_column='DIFFERENCE', null=True)),
                ('difference_explain', models.TextField(blank=True, db_column='DIFFERENCE_EXPLAIN', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_project_accounting_information',
            },
        ),
        migrations.CreateModel(
            name='EnvProjectAchievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_id', models.TextField(db_column='PROJECT_ID', unique=True)),
                ('paper_count', models.TextField(blank=True, db_column='PAPER_COUNT', null=True)),
                ('article_count', models.TextField(blank=True, db_column='ARTICLE_COUNT', null=True)),
                ('patent_count', models.TextField(blank=True, db_column='PATENT_COUNT', null=True)),
                ('trained_post_doctoral_count', models.TextField(blank=True, db_column='TRAINED_POST_DOCTORAL_COUNT', null=True)),
                ('trained_doctor_count', models.TextField(blank=True, db_column='TRAINED_DOCTOR_COUNT', null=True)),
                ('trained_master_count', models.TextField(blank=True, db_column='TRAINED_MASTER_COUNT', null=True)),
                ('hold_meeting_count', models.TextField(blank=True, db_column='HOLD_MEETING_COUNT', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_project_achievement',
            },
        ),
        migrations.CreateModel(
            name='EnvProjectActivityInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('project_id', models.TextField(blank=True, db_column='PROJECT_ID', null=True)),
                ('activity_name', models.TextField(blank=True, db_column='ACTIVITY_NAME', null=True)),
                ('organizer_num', models.TextField(blank=True, db_column='ORGANIZER_NUM', null=True)),
                ('attendance', models.TextField(blank=True, db_column='ATTENDANCE', null=True)),
                ('foreign_num', models.TextField(blank=True, db_column='FOREIGN_NUM', null=True)),
                ('activity_address', models.TextField(blank=True, db_column='ACTIVITY_ADDRESS', null=True)),
                ('activity_time', models.TextField(blank=True, db_column='ACTIVITY_TIME', null=True)),
                ('organizer', models.TextField(blank=True, db_column='ORGANIZER', null=True)),
                ('co_organizer', models.TextField(blank=True, db_column='CO_ORGANIZER', null=True)),
                ('undertake_unit', models.TextField(blank=True, db_column='UNDERTAKE_UNIT', null=True)),
                ('support_unit', models.TextField(blank=True, db_column='SUPPORT_UNIT', null=True)),
                ('activity_basis', models.TextField(blank=True, db_column='ACTIVITY_BASIS', null=True)),
                ('approve_unit', models.TextField(blank=True, db_column='APPROVE_UNIT', null=True)),
                ('participater1', models.TextField(blank=True, db_column='PARTICIPATER1', null=True)),
                ('participater2', models.TextField(blank=True, db_column='PARTICIPATER2', null=True)),
                ('participater3', models.TextField(blank=True, db_column='PARTICIPATER3', null=True)),
                ('participater4', models.TextField(blank=True, db_column='PARTICIPATER4', null=True)),
                ('participater5', models.TextField(blank=True, db_column='PARTICIPATER5', null=True)),
                ('participater6', models.TextField(blank=True, db_column='PARTICIPATER6', null=True)),
                ('participater7', models.TextField(blank=True, db_column='PARTICIPATER7', null=True)),
                ('participater8', models.TextField(blank=True, db_column='PARTICIPATER8', null=True)),
                ('participater9', models.TextField(blank=True, db_column='PARTICIPATER9', null=True)),
                ('participater10', models.TextField(blank=True, db_column='PARTICIPATER10', null=True)),
                ('participater12', models.TextField(blank=True, db_column='PARTICIPATER12', null=True)),
                ('participater13', models.TextField(blank=True, db_column='PARTICIPATER13', null=True)),
                ('participater14', models.TextField(blank=True, db_column='PARTICIPATER14', null=True)),
                ('participater15', models.TextField(blank=True, db_column='PARTICIPATER15', null=True)),
                ('participater16', models.TextField(blank=True, db_column='PARTICIPATER16', null=True)),
                ('participater17', models.TextField(blank=True, db_column='PARTICIPATER17', null=True)),
                ('participater18', models.TextField(blank=True, db_column='PARTICIPATER18', null=True)),
                ('participater11', models.TextField(blank=True, db_column='PARTICIPATER11', null=True)),
            ],
            options={
                'managed': False,
                'db_table': 'env_project_activity_info',
            },
        ),
        migrations.CreateModel(
            name='TempExpertPatent',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('expert_id', models.TextField(blank=True, db_column='EXPERT_ID', null=True)),
                ('protection_time', models.TextField(blank=True, db_column='PROTECTION_TIME', null=True)),
                ('patent_name', models.TextField(blank=True, db_column='PATENT_NAME', null=True)),
                ('authorized_state', models.TextField(blank=True, db_column='AUTHORIZED_STATE', null=True)),
                ('patent_domain', models.TextField(blank=True, db_column='PATENT_DOMAIN', null=True)),
                ('patentee_seq', models.TextField(blank=True, db_column='PATENTEE_SEQ', null=True)),
                ('patent_type', models.TextField(blank=True, db_column='PATENT_TYPE', null=True)),
                ('register_date', models.TextField(blank=True, db_column='REGISTER_DATE', null=True)),
                ('application', models.TextField(blank=True, db_column='APPLICATION', null=True)),
                ('ordernum', models.TextField(db_column='ORDERNUM')),
            ],
            options={
                'managed': False,
                'db_table': '_temp_expert_patent',
            },
        ),
        migrations.CreateModel(
            name='TempExpertProjectInfo',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('expert_id', models.TextField(blank=True, db_column='EXPERT_ID', null=True)),
                ('start_time', models.TextField(blank=True, db_column='START_TIME', null=True)),
                ('end_time', models.TextField(blank=True, db_column='END_TIME', null=True)),
                ('project_name', models.TextField(blank=True, db_column='PROJECT_NAME', null=True)),
                ('fundsource', models.TextField(blank=True, db_column='FUNDSOURCE', null=True)),
                ('expenditure', models.TextField(blank=True, db_column='EXPENDITURE', null=True)),
                ('effect', models.TextField(blank=True, db_column='EFFECT', null=True)),
                ('ordernum', models.TextField(db_column='ORDERNUM')),
                ('statk_holder', models.TextField(blank=True, db_column='STATK_HOLDER', null=True)),
            ],
            options={
                'managed': False,
                'db_table': '_temp_expert_project_info',
            },
        ),
        migrations.CreateModel(
            name='TempExpertRepresentPapers',
            fields=[
                ('id', models.TextField(db_column='ID', primary_key=True, serialize=False, unique=True)),
                ('expert_id', models.TextField(blank=True, db_column='EXPERT_ID', null=True)),
                ('publish_time', models.TextField(blank=True, db_column='PUBLISH_TIME', null=True)),
                ('title', models.TextField(blank=True, db_column='TITLE', null=True)),
                ('author_order', models.TextField(blank=True, db_column='AUTHOR_ORDER', null=True)),
                ('thesis_domain', models.TextField(blank=True, db_column='THESIS_DOMAIN', null=True)),
                ('publish_house', models.TextField(blank=True, db_column='PUBLISH_HOUSE', null=True)),
                ('publication_level', models.TextField(blank=True, db_column='PUBLICATION_LEVEL', null=True)),
                ('influence', models.TextField(blank=True, db_column='INFLUENCE', null=True)),
                ('ordernum', models.TextField(db_column='ORDERNUM')),
            ],
            options={
                'managed': False,
                'db_table': '_temp_expert_represent_papers',
            },
        ),
        migrations.CreateModel(
            name='TempProTcRegisterUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.TextField(db_column='USER_ID')),
                ('register_id', models.TextField(blank=True, db_column='REGISTER_ID', null=True)),
                ('relat_type', models.TextField(db_column='RELAT_TYPE')),
            ],
            options={
                'managed': False,
                'db_table': '_temp_pro_tc_register_user',
            },
        ),
    ]
